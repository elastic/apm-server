// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package include

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("apm-server", "fields.yml", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "eJzcXf+T27ax/91/xb7LZM6eOdF3Z5+daqbp87PT1JO49sR2X2fajgKBKxE1CdAAeGel0//9Db6QBEmQkk665Pr0Q2JRxO5nF4vFYrHAzeATbuZAyuIBgGY6xzl8jxwlyeHFuzewYpin6gFAiopKVmom+PwB+OfmXwAz4KTAOeRMaeSMr+1TAL0pcW7o3wiZ+mchGfjWPwR4kaYSlQKdISiU1yiBqZYgCJ50WJVSUFRKyMR835Xfu7qVpZI8GCGJ18j1/jRtsx5RzQpUmhRlh9xaiqqMEPOPQt2GxCrVPKop5aLRtvlQUXE9h4vg0YjCzedDDQ7EymreSgCMQ8GoFAqp4KkCxThF+MjZF8BS0KwnIhVc4xe9k4Bhj/MNELlkWhK5qYlUJAfGV0IWxLwPEtdEpsYAGnhnQEmpK4kpLDf2MVnbx8KyIHm+MV15zdL2jUqhTGo4G04KRuewIrnCnsYHKtdkPVS6WP4TqQ4euweLmK10WGpZ4W5d8wJWOdFQkLK05r+yMsxSXDGOqYUFN0xnoLQ0L1yTvEKVDAXItC4HAoTdExW/ba800ZVaUJFiB2DU/CZFAvhgBrelB4ZebXUGIkhUpeAKIyIYyQ8RwbQPvERIZdhXO4hQ06vx52K9xtQMG2dnEQgsPQbz1ylyzVYM5R6ssSAsPwb37wyhfWQuI1x7D6fFfVdzMzzgJkOJoZtSIJEKmWJ6Zqgzasc+gRtcwlKKm2DQt93HlGkolprYgbSSorA0/zr7o5A3xFAz/4IMSYryzCC4yRjN7EsrJpUG5FpuDBXzqAUpJFszTnKgObMTQYS1HaaQiRs0M1zB1pkGLjQsETiaaYRIlm+Mn1DaiEUUMA2UcPPGSsi182kECpIzykSlxvVvHYb1jZF+CDz2Dj3xXqz0DZHe1QKh2vgcZlBlJF8ZDRDL7wxwnXS7AB7D2/dARbFk3Dr1yAiX+LlCpQ8a5DJm5H0CW+R8YXCWOWqEjzI/8x6WZljgGWRCaSA8hZLorNu7EVwd8chN75epQbgVJXg/JMnNGVS8JFJhCh9/+rG2RK/OM8Bkbb2rmj9+jF+IES2hopg/ffrksUIiafaHz7/HnCjNqPv+lRZlMiZHKYUWVOR3IUxNOyZDAidOipNRaKsqvxNYhu4ZlEIptjTOxdj/jCiFxTL/dZRuzG4wex1Jupr2iNID9OOaL4XUd2IQQuo4rqdPn4yjITq7K20Z2iOa8h07riX3+12gcpT9u0t0s9LnCuWmjg3jkHs2OA49I+pOgBu6PWxmPNX4tChPovOaGVuLa5SKCX6skM6GoJ5mH1OOxK1ABGgzh4fLvC6yAnUmjhLpNZgcyX0htfOqC6rv0wLAihVZBdRYXQhxenl+fhpV8opxpjKMqXkpRI6E7zPf+ybAeMoosWHNTYY6Q9kBBTdENZxBSBO0RfStNkpjsVXbE5je+kWsJ+U7Jpnuqq2TxdRo3TJWY9OEx9aG4kY7dSwOnQgvBGfcDNNIzeL9uABDygeCLHOiV0IWxwVYUz0QXG/1NLKo2oqoXbPYmFZnRHvmqoUUMW+fITvEvl8HyZ0SpVmFNY4MQVbcfvWMgiVfSjSxSqIiz5Hqzvjv58s6mFm/u0Yc11at/bkqUDLagHv9qulNlNeMYv3LmGUdH8oAwqmCkkhjUNNYbKL3eCb+vqsARz7mH917hxhQzWrcMcbkPa5PfF0UlSbLHKHi7HOF0HGOHiAWTGuXuWxn6C4dNxSGa1eAnCwxX2gsjOPAOZz86182dfDvf5/03hQl8kXO+KcF4wtaSdP5C02Wg2Sj+VQyIDoQawYF43VkNYeTq+Q8Oe/zMx8LZQ4nSfKYlOXjT2xJOPnqcUpUthREpo+fXiyv0t9dns+ef3N5Mbu4wOezb+jT57NnV8tvnl4tr+hq+eQPC/L7hzZOnbv/LVy4On9IOMk3v+DihuUpJTKd/5c+cy+e+jRx4pVsk//zry8vG/V8fXl5+ujRoyHqvnDPjHAzkpcZufhVZMwJX1dkjfO8oshxUqK/t/3995NTI07UqmNB8EGG/ZduBDxpylFEyK+ZFLzoJ52O4l0C4iPsax1HeQ9zQVsTN3exkvxz4CtKKdaSFIXRbY0dKoXp6GIs3uUHg+p1/K64mnVGxTUb8bD3UO0e7n3Q9ASUZsEjSYE3Qn76T1FvA/g+KHgSTLMyGWTJ77F6XQ7+Hqh2AKSJLiXhilDdQojsCk9tw/bl6QTOo7usExvdGYag4PWrTuAYDcMGIdhfGN7A+5JwFcYLO8df47FXLzSxYVdP+1ujkSf4JMXn5+ez5ymeu2hkeXFxNUtXv6O/O0/JZbq6uFXEFagtYen2WKsnTBhm3bVMIxFWT4IGfhtXBXZLEe6HyVqbbdd3DpoWwWakSxws0SwfFWjRL2dx68B7KY3HFkaSX8F3L993BAid8oHwey7ZUSM5I2EuoyQ6a6pZmnjconBFRgOyQze7P+WaRkf0TKgjST6Sc9sJp81RJR0KQ8MYFpfsRJWVQ1q36SVHrUl7DmiK7dmqyezRVDawD20UXkOl28ltZc6BnTzYd9hFdX4vIfGNj2TcNdXOJo0f4PU7tniJipJhCjbB95ASfqodZV9LpR51dGUnY9XRVqcIa6IAK1Z8NVaSNl105UCMl13F06QH9m0Zcb3TXVBn/kzLIbkD6EUJ9jOJ+1B0bTu662YIb6m7r2xNDePNlAJbUxT7OO6Qwm48Y0u4/Z3RaBJzB0fkoTdAejMa7JhVug2njhfYqqpICuc30VSN484V1TAa6OkI0UsX/KTihzmc30TvHsadq73mM6r1w4K7aFjXLjAPnBQyiauDOqquVbylEutZvpJ5IslNpOpY7FHNFwN4gCWF4MYDw5Uk61vMAR3iRGWRiHOo2n0J22K24dRNdHZfOn2kzOor+PD21ds5FFVu65TztGGa2IrTwBVFyQqp6/ANZt92d0ZHCs6ie6hbckG71pbVLG0m4SDd9yncVvHROrKD1V7XXhaMV64E4GR+MtCCK4QdqGHvTJyjM1XoedKLqIMTAAd6zn41/C5D01ZYu4YDentH05ZYLJC+xSxvaTWnGx74o1xLJLo9y/U/7lukS14KrgnjZilWFILbdl5vQK4Jy+0ON+NA8twnmwwou+ceO/1l2idmTv1F8C0LLZuP9W+CrXzRleTteR1RonTFWL5QRvAg8WVEAtaqxVeN9Gzm5L+bs1cnHdtJia7hGdtjEtPO4rBOBwfv+ULYObyo1pXScPlMZ3B5fvHsDC4u50+u5ldPkidPLncT2p24usmQB2m8XKx9CY6tclnbE3h6mFlvjyONrWGbI1V2mW1re/z5AYUaSpROf7aQHWUkV+/01GPcHAOE/RfgcaCN+dnDHVTwFVtX0tpcXdvRQYBSigknEGfynWlUGzV1HI1ZkTRlvtCO8ZUwVk6Jsj7J8mkKS8b8iEFwmCd00Jyq/ciluajSdui+NF/rs2wSCtQkJZrER/Mb/6s70UI7TZWRNzgvl6YL+8KiJhmcfXzQ298Kckwksa2Smmx/cCDdMgLCXawuwgTeuRJ79CkVIBINwTNYUzwDISFla6ZJLigSnoxiY1xpwiku2Bbze+1fDLLSthiuIDRjvG/+MQ6Bw97GI6wP2o2Lf2ER2FmjZ32ZFJiyqpjm/saRsCa2H3Pv/VnO9GYRePMGQaVmSJSeXdAtziggBNbZs9aRM+XgMDXiwbsmZ/1L06sNFP/L7MvupuebGCzfC7HO0Y20ce4S1617HGHwk31nm3x+oKeCfrLjx4/0V/X3CHH3m62YDqof3TB3v5kxqzIh9cJ50TYSIpxmQtb8Zs0oH5nBG1hxHzvmC71fdXHNQT7xoyunawgCS5MpdkUsUbQXx9AuLDnnnBoAZjJeVizXzQn0OJRo9LYXkpcNT27Ppo/z6iTD4fankieqdK0mHJ/GaP2a3pvsn9y3CJHXZkINDFXIiOtpbdM832qZkxtiY3YpVPIJJcdhvL/3kqUfkJ4qcKTrNFGjpU/V0vygUbW6+iF8FuHU/t5M8t0ZuyUKoaamB33baKt6O6D3U3Ip0iMYf6CBUqQQT9kYVtWhLibg9E6k8PH1q/hSTJUkUqh8W1YtxSEzkeJxNWgojqhwV9exGyO/IVaQyGYu4VxoW+d/NHYByTjPY7rjgC/teOYptkeYkKJ8Hd32qpZZvRjyDubFuzduPdH3L/bhTJVI2YpRd4rCOOQX796MuIJrhjd+DfRgXAjHYg4nqaB/i9Ywn/4jsZF8vfZuinOgJIzn7f7osPoqXnllRWlKr3Yqu4qXXG0pt9pelvR89WxF6PnsOX1GXFkSIVdXsyfL8/Tqkj6/oM/Of6Xi9t2KrY4u0RFK2TuremApMNorFpwyONsqsdMT4+vFJ9wc09xmMYz7Zh5emaEW3lRDuC+YlFhKVMhtOEG4TwAJaqzYX6tAoBCcaWGa1tqs2e11fc1Os6W/NOjp7uFQu2Z2PRHxiVVeSjbM0/funfCsL8dY/7HirmKTkjz3KysTkrtlHCuI3ECJskQtiRb+WpSJA7GhyRzmp7/3lH7ATe9OFGfSxstWyi54a6a3rTl1maJXqAnL72Pt6dXq/BvyzfPjO8ThMP9V60/3lWvELUakiNSghlaKXyiWOrb5fMuTlmQpKt25pCY3Cwspbng9ggPTnDpgPDgGvsfJng+1v3DnvhXqIAtun2ekLJFj6jeDTLiyJCpsNVLAX6BSY+d+BlfdRN1OFG1zpY8D4LmMYRBpdftDlYado9AuFgY3C/W9LYxnpLcxb5x+lFhGeJpj/Lhq7JT9bip97Q7ZC9k5Y+90a8/2kmqdaVCiQHfyl3GfjkmxPXQ/XNSI9SED5UV3L6AZM/UC3Lj15ga6vQZLjtcY323f0SAUXqNketPulVIhxw6x2OlHLkYrJ3bkyfs3m0moU95TR2juaAS2GzX5pjvBTg/GkkhSLKZA3eoo4gtHGLVkv2DaYIDvjLs6fSmqPLU1VlRwjlSDFvC1Ou2f+21uPCpR6k1NBZgCpVmeN9uSZ3aXTmWW7BIBP1ckr8/KdyQ8g2WlXWVqmROKmcjtvo9E+zUdInjN7TgDxXTl19QDqgaR6XLD0g4ovzAELdZ2/DZZr+biC78gPTEr0vdu7/aN0Ra1gUtEu/4lfyFI4d49g5x9Qnj57qPVQIGFkBuonKR2S5NI7CfDYxvHw9S4j4xiS9/O7R07B/o/u2Y/18t1Bbmg7QUeXqL+fuKDrrnSsnrQNc+uAxs1y59pWQ1YG73Z/YK220f3MYUmecKFLJKSDsN1RUmO6WKVC6Ij0WuJknZrqLYV3rgGxrbEyuK0px9VaY+ybOrtGXuJgLt21LohonTsBH1wpR5TYIQguR2XnhKviqW7K9FwokLaJFIKTIMkfI3dshtrROfG1i/Oz79O+l3kjPCWveQaDzrKG/Y+fTXool7lU901y43uyDfVMYauxzLcdyBUVxG2+0ywlkI7ijG1vbCSiNP3N7S1erjT3UNjsm+7BcjhM1xqkIw7Igm8tht4lOS0MqunFExAmoJwkcnb9wm85fAj49UXe1Oj4IoprdrTpw3NHtMyrwxZmnmbXFarFUplyb19/1dDjCkgoCp7aUwIzrxu96s4oZpd189t0/9lPBU36sy3tzNGf/oTtc9KfEND/OeBwfdve9nP4n3rwOTrcV1vcZzZUdl4/MDR93zmxM5j4DZvYZi7Os8p2xx1oFtc6JQT3eEWreM60mO70qEz7attMCZ26Lw3tk2bzTa9xOwNdraSqbnxpm1eSlyxL3M4+ZtV/z9OdupSxX65S3dj68Csy71mMvSMYZ9lpCNIU6SvVDJkd3x8P6FiqTGl96jhPfsFExeNFyZsN1YQgSworeyZLsahIOY/7p2HP7148ygJdy+UqCTFgpTdHYz3weMOwuYHWLEcFSCXjGaYuoA3qItyORzXp47JYsVyjbLp5xk0zJMQRjQeDH6HsdTr7jul/08uP+qvEetLYmzetVFZ51xyDNTR766pddNsyA86YFnxNLcWgdFa+r3yvz8K6vIEtRoaySXmxE7LfqFm+NVVzja/r7uDobS5lHAcuCfdIVASHt/HGyvHtRt5hvi+G23+ioPuUCjJLa9yGPRCZEvCWArspvZXWEqkNhB7+O3v4Vly9SiBF27qzjf1fVzBvWgliZlChl8W43sjO2Lp7oQYTmfAuJYirWiIb8da79GNmR3/moP9qx3GOFCxNW+Mk1hkdSpNUeGqAUlY+RuBuGOB634Qf/D6FStobFlijtc2u1RDbK6yS4WdRx7ieg6n6TIphdJriepzntjc+ukZnNbWm6Bcmu82pD49A9Q0pnmlSeT0yJQL3tHJVv0IaGRSjqpsi9rM5+1qpVAPnEvQiacqKC9n7k8FbOrEpZW7b6qdP/MRUVZaSbL3NkREX7+Jwl558FuE7jZqav+HkpsP42WlF/VLIaHei6LS4ZtEvWF5zibfNX6NuU2r89jhLxk7rLb7saeo4/xgc7wjrtNf0tFxpMG81T04EExfHzo/dDO67U97FaUc/UKhqAPupantaarF1JiPxym32Uwec93hpUVDD64YX+dtBPbQXpz8/Xcf4HGlUKrHc5aexpzg4YcXbu3IEzj1oZBx1ktCP5k+5Ok/xdI77XvrhrbFxXZJl3a8DlNhD/7neh+JqsqH3mfvMlpHJ7jTqAlA4E8fPrzrXAtuPIJ5OLNTHqbh67HJqiDy02/0p5o6t4QEt4dY+7S5QAvOdX/bE2NCJJxcs7W1gA+sYHy4uzkt1UjGyTxmfL1YEaqFnMPFuf2MCj+MneyRi2HUPNwQnjKDoBfbrZxTT/sUblieA+M0r1K0Jw/Do4jN7mwyQocLXcN0lMyDjFy7+UuBrSJwVWrwClekyrWyoZSsovcVl4QvbPix1fdMzROpFGU5sps+dcEg9D5jGwFdihHXNeiTNgfVpnQ8Sq8pV7bfdWDJg/8LAAD//1QJZ1w="
}
