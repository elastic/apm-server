// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package include

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("apm-server", "fields.yml", Asset); err != nil {
		panic(err)
	}
}

// Asset returns asset data
func Asset() string {
	return "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"
}
