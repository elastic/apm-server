[[apm-components]]
== Components and documentation

****
There are two ways to install, run, and manage Elastic APM:

* With the Elastic APM integration
* With the standalone (legacy) APM Server binary

This documentation focuses on option one: the **Elastic APM integration**.
For standalone APM Server (legacy) documentation, please see the <<legacy-apm-overview>>
and <<overview>>.
****

Elastic APM consists of four components: *APM agents*, the *Elastic APM integration*, *{es}*, and *{kib}*.
Generally, there are two ways that these four components can work together:

APM agents on edge machines send data to a centrally hosted APM integration:

image::./images/apm-architecture.png[Architecture of Elastic APM]

Or, APM agents and the APM integration live on edge machines and enroll via a centrally hosted {agent}:

image::./images/apm-architecture-two.png[Architecture of Elastic APM option two]

Read on to learn more about each of these components!

[float]
=== APM Agents

APM agents are open source libraries written in the same language as your service.
You may only need one, or you might use all of them.
You install them into your service as you would install any other library.
They instrument your code and collect performance data and errors at runtime.
This data is buffered for a short period and sent on to APM Server.

Each agent has its own documentation:

* {apm-go-ref-v}/introduction.html[Go agent]
* {apm-ios-ref-v}/intro.html[iOS agent]
* {apm-java-ref-v}/intro.html[Java agent]
* {apm-dotnet-ref-v}/intro.html[.NET agent]
* {apm-node-ref-v}/intro.html[Node.js agent]
* {apm-php-ref-v}/intro.html[PHP agent]
* {apm-py-ref-v}/getting-started.html[Python agent]
* {apm-ruby-ref-v}/introduction.html[Ruby agent]
* {apm-rum-ref-v}/intro.html[JavaScript Real User Monitoring (RUM) agent]

[float]
[[apm-integration]]
=== Elastic APM integration

The APM integration receives performance data from your APM agents,
validates and processes it, and then transforms the data into {es} documents.
Removing this logic from APM agents help keeps them light, prevents certain security risks,
and improves compatibility across the {stack}.

The Elastic integration runs on {fleet-guide}[{agent}]. {agent} is a single, unified way to add monitoring for logs,
metrics, traces, and other types of data to each host.
A single agent makes it easier and faster to deploy monitoring across your infrastructure.
The agent's single, unified policy makes it easier to add integrations for new data sources.

[float]
=== {es}

{ref}/index.html[{es}] is a highly scalable free and open full-text search and analytics engine.
It allows you to store, search, and analyze large volumes of data quickly and in near real time.
{es} is used to store APM performance metrics and make use of its aggregations.

[float]
=== {kib} {apm-app}

{kibana-ref}/index.html[{kib}] is a free and open analytics and visualization platform designed to work with {es}.
You use {kib} to search, view, and interact with data stored in {es}.

Since application performance monitoring is all about visualizing data and detecting bottlenecks,
it's crucial you understand how to use the {kibana-ref}/xpack-apm.html[{apm-app}] in {kib}.
The following sections will help you get started:

* {apm-app-ref}/apm-ui.html[Set up]
* {apm-app-ref}/apm-getting-started.html[Get started]
* {apm-app-ref}/apm-how-to.html[How-to guides]

APM also has built-in integrations with {ml-cap}. To learn more about this feature,
or the {anomaly-detect} feature that's built on top of it,
refer to {kibana-ref}/machine-learning-integration.html[{ml-cap} integration].
