// This file was copied over from libbeat and
// then adapted to APM Server specific needs

[[configuring-ingest-node]]
== Parse data using ingest node pipelines

You can configure APM Server to use an {ref}/ingest.html[ingest node]
to pre-process documents before indexing them in Elasticsearch.

A pipeline is a definition of a series of processors that operate on your data.
For example, a pipeline can define one processor to remove a field, and another to rename a field.
Using pipelines involves two steps:

. First, you need to <<register-pipelines,register a pipeline>> in Elasticsearch.
. Then, the pipeline needs to be <<apply-pipelines, applied during data ingestion>>.

[[register-pipelines]]
[float]
=== Register pipelines in Elasticsearch
To register a pipeline in Elasticsearch, you can either configure APM Server to
register pipelines on startup, or you can manually upload a pipeline definition.

[[register-pipelines-apm-server]]
[float]
==== Register pipelines on APM Server startup
Automatic pipeline registration requires `output.elasticsearch` to be enabled and configured.

Navigate to APM Server's home directory and find the default pipeline configuration at
`ingest/pipeline/definition.json`.
To add, change, or remove pipelines in Elasticsearch,
change the definitions in this file and restart your APM Server or run `apm-server setup --pipelines`.

By default, pipeline registration is disabled.
See how to <<register.ingest.pipeline.enabled,configure pipeline registration>>.

[[register-pipelines-manual]]
[float]
==== Manually upload pipeline definitions

You can manually upload pipeline definitions by describing them in a file.
Consider the following sample pipeline in a file named `pipeline.json`.
This pipeline definition converts the value of `beat.name` to lowercase before indexing each document.

[source,json]
------------------------------------------------------------------------------
{
    "description": "Test pipeline",
    "processors": [
        {
            "lowercase": {
                "field": "beat.name"
            }
        }
    ]
}
------------------------------------------------------------------------------

To register this pipeline, run:

[source,shell]
------------------------------------------------------------------------------
curl -H 'Content-Type: application/json' -XPUT 'http://localhost:9200/_ingest/pipeline/test-pipeline' -d @pipeline.json
------------------------------------------------------------------------------


[[apply-pipelines]]
[float]
=== Apply pipelines during data ingestion
To specify which pipelines to apply during data ingestion,
add the pipeline IDs to the `pipelines` option under `elasticsearch` in the +apm-server.yml+ file:

[source,yaml]
------------------------------------------------------------------------------
output.elasticsearch:
  pipelines:
  - pipeline: "test-pipeline"
------------------------------------------------------------------------------

TIP: More information on defining a pre-processing pipeline is available in the
{ref}/ingest.html[ingest node] documentation.
