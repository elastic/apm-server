[[storage-management]]
= Storage Management

[partintro]
--
In the following section you can learn how to

* <<manage-indices-kibana, manage APM indices via Kibana>>
* <<reduce-storage, reduce storage usage>>
* <<update-existing-data, update existing data>>
--

[[manage-indices-kibana]]
== Manage Indices via Kibana
The Kibana UI for managing indices allows you to
view indices, index settings, mappings, docs count, used storage per index and much more.
You can perform management operations,
for example deleting indices directly via the Kibana UI.
The UI also supports applying bulk operations on several indices at once.
Check out the {kibana-ref}/managing-indices.html[Kibana Managing Indices] documentation for more details.

[[reduce-storage]]
== Reduce storage
The amount of storage for APM data depends on several factors:
how many services you are instrumenting, how much traffic the services see, agent and server settings,
and for how long you keep monitoring data.

[[reduce-sample-rate]]
[float]
=== Reduce the sample rate

The transaction sample rate directly influences the number of documents (more precisely, spans) to be indexed
and therefore is the most obvious way to reduce storage.

The transaction sample rate is a configuration setting of the agents.

Reducing it does not affect the collection of metrics such as _Transactions Per Second_.

[[reduce-stacktrace]]
[float]
=== Reduce collected stacktrace information
Elastic APM agents collect `stacktrace` information under certain circumstances.
This can be very helpful by identifying issues in your code,
but it also comes with an overhead at collection time and increases the storage usage.
Stacktrace collection settings are managed in the agents.

[[delete-data]]
[float]
=== Delete data

You might want to keep data only for a defined time period and delete old documents periodically,
or you might also want to delete data collected for specific services or customers,
or delete specific indices.
Depending on your use case,
you can either delete data periodically with {curator-ref-current}[Curator],
by using the {ref}/docs-delete-by-query.html[Delete By Query API],
or by using the {kibana-ref}/managing-indices.html[Kibana Index Management UI].


[[delete-data-periodically]]
[float]
==== Delete data periodically

To delete data periodically you can use {curator-ref-current}[Curator] and set up a cron job to run it.

By default APM indices have the pattern `apm-%{[beat.version]}-{type}-%{+yyyy.MM.dd}`.
With the curator command line interface you can, for instance, see all your existing indices:

["source","sh",subs="attributes"]
------------------------------------------------------------
curator_cli --host localhost show_indices --filter_list '[\{"filtertype":"pattern","kind":"prefix","value":"apm-"\}]'

apm-{stack-version}-error-{sample_date_0}
apm-{stack-version}-error-{sample_date_1}
apm-{stack-version}-error-{sample_date_2}
apm-{stack-version}-sourcemap
apm-{stack-version}-span-{sample_date_0}
apm-{stack-version}-span-{sample_date_1}
apm-{stack-version}-span-{sample_date_2}
apm-{stack-version}-transaction-{sample_date_0}
apm-{stack-version}-transaction-{sample_date_1}
apm-{stack-version}-transaction-{sample_date_2}
------------------------------------------------------------

And then delete any span indices older than 1 day:

["source","sh",subs="attributes"]
------------------------------------------------------------
curator_cli --host localhost delete_indices --filter_list '[\{"filtertype":"pattern","kind":"prefix","value":"apm-{stack-version}-span-"\}, \{"filtertype":"age","source":"name","timestring":"%Y.%m.%d","unit":"days","unit_count":1,"direction":"older"\}]'

INFO      Deleting selected indices: [apm-{stack-version}-span-{sample_date_0}, apm-{stack-version}-span-{sample_date_1}]
INFO      ---deleting index apm-{stack-version}-span-{sample_date_0}
INFO      ---deleting index apm-{stack-version}-span-{sample_date_1}
INFO      "delete_indices" action completed.
------------------------------------------------------------


[[delete-data-by-query]]
[float]
==== Delete data matching a query

To delete documents matching a specific query, for example, all documents with a given context.service.name,
use the following request:



["source","sh"]
------------------------------------------------------------
POST /apm-*/_delete_by_query
{
  "query": {
    "bool": {
      "must": [
        {
          "term": {
            "context.service.name": {
              "value": "old-service-name"
            }
          }
        }
      ]
    }
  }
}
------------------------------------------------------------
// CONSOLE

See {ref}/docs-delete-by-query.html[delete by query] for further information on this topic.

[[delete-data-kibana]]
[float]
==== Delete data via Kibana Index Management UI
Select the indices you want to delete, and click the _Manage indices_ button to see the available actions.
Then click _delete indices_.
Follow the {kibana-ref}/managing-indices.html[Kibana Index Management] documentation
 to get started with the index management UI.

[[update-existing-data]]
== Update existing data
You might want to update documents already indexed,
for example if you your service name was set incorrectly.

For this you can use the {ref}/docs-update-by-query.html[Update By Query API].

[[update-data-rename-a-service]]
[float]
=== Rename a service

To rename a service send the following request:

["source","sh"]
------------------------------------------------------------
POST /apm-*/_update_by_query
{
  "query": {
    "term": {
      "context.service.name": {
        "value": "old-service-name"
      }
    }
  },
  "script": {
    "source": "ctx._source.context.service.name = 'new-service-name'",
    "lang": "painless"
  }
}
------------------------------------------------------------
// CONSOLE

Remember to also change the service name in the {apm-agents-ref}/index.html[APM agent configuration] accordingly.
