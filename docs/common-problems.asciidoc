[[common-problems]]
== Common problems

This section describes common problems you might encounter with APM Server.

* <<queue-full>>
* <<request-timed-out>>

[[queue-full]]
[float]
=== HTTP 503: Queue is full

APM Server has an internal queue that helps to:

* buffer data temporarily if Elasticsearch is intermittently unavailable
* handle sudden large spikes of data
* send documents to Elasticsearch in bulk, instead of individually

When the queue has reached the maximum size,
APM Server returns an HTTP 503 status with the message "Queue is full".

A full queue generally means that the agents collect more data than APM server is able to process.
This might happen when APM Server is not configured properly for the size of your Elasticsearch cluster,
or because your Elasticsearch cluster is underpowered or not configured properly for the given workload.

The queue can also fill up if Elasticsearch runs out of disk space.

If the APM Server only returns 503 responses, it indicates that an Elasticsearch disk might be full.
If the APM Server returns interleaved 503 and 202 responses, it indicates that the APM Server can't process that much data.

You have a few options to solve this problem:

* <<reduce-storage, Reduce storage>>
* <<tune-output-config>>
* <<adjust-queue-size>>
* <<tune-es, Tune Elasticsearch for higher ingestion>>

[[request-timed-out]]
[float]
=== HTTP 503: Request timed out waiting to be processed

This happens when APM Server exceeds the maximum number of requests that it can process concurrently.
This limit is determined by the `apm-server.concurrent_requests` configuration parameter.

To alleviate this problem,
you can try to:

* <<reduce-sample-rate>>
* <<reduce-stacktrace>>
* <<reduce-payload-size>>
* <<adjust-concurrent-requests>>
* <<add-apm-server-instances>>

[float]
[[ssl-client-fails]]
=== SSL client fails to connect

The target host running might be unreachable or the certificate may not be valid. To resolve your issue:

* Make sure that server process on the target host is running and you can connect to it.
First, try to ping the target host to verify that you can reach it from the host running {beatname_uc}.
Then use either `nc` or `telnet` to make sure that the port is available. For example:
+
[source,shell]
----------------------------------------------------------------------
ping <hostname or IP>
telnet <hostname or IP> 5044
----------------------------------------------------------------------

* Verify that the certificate is valid and that the hostname and IP match.
+

* Use OpenSSL to test connectivity to the target server and diagnose problems.
See the https://www.openssl.org/docs/manmaster/apps/s_client.html[OpenSSL documentation] for more info.

[float]
==== Common SSL-Related Errors and Resolutions

Here are some common errors and ways to fix them:

* <<cannot-validate-certificate,x509: cannot validate certificate>>
* <<getsockopt-no-route-to-host,getsockopt: no route to host>>
* <<getsockopt-connection-refused,getsockopt: connection refused>>
* <<target-machine-refused-connection,No connection could be made because the target machine actively refused it>>

[float]
[[cannot-validate-certificate]]
===== x509: cannot validate certificate for <IP address> because it doesn't contain any IP SANs

This happens because your certificate is only valid for the hostname present in the Subject field.

To resolve this problem, try one of these solutions:

* Create a DNS entry for the hostname mapping it to the server's IP.
* Create an entry in `/etc/hosts` for the hostname. Or on Windows add an entry to
`C:\Windows\System32\drivers\etc\hosts`.
* Re-create the server certificate and add a SubjectAltName (SAN) for the IP address of the server. This make the
server's certificate valid for both the hostname and the IP address.

[float]
[[getsockopt-no-route-to-host]]
===== getsockopt: no route to host

This is not a SSL problem. It's a networking problem. Make sure the two hosts can communicate.

[float]
[[getsockopt-connection-refused]]
===== getsockopt: connection refused

This is not a SSL problem. Make sure that Logstash is running and that there is no firewall blocking the traffic.

[float]
[[target-machine-refused-connection]]
===== No connection could be made because the target machine actively refused it

A firewall is refusing the connection. Check if a firewall is blocking the traffic on the client, the network, or the
destination host.
