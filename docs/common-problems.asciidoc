[[common-problems]]
== Common problems

This section describes common problems you might encounter with APM Server.

* <<no-data-indexed>>
* <<bad-request>>
* <<unauthorized>>
* <<forbidden>>
* <<request-too-large>>
* <<rate-limited>>
* <<queue-full>>
* <<request-timed-out>>
* <<ssl-client-fails>>

[[no-data-indexed]]
[float]
=== No data is indexed
If no data shows up in Elasticsearch or Kibana, first check that the APM components are properly connected.

To ensure that APM Server configuration is valid and it can connect to Elasticsearch, run the following commands:

["source","sh"]
------------------------------------------------------------
apm-server test config
apm-server test output
------------------------------------------------------------

To see if the agent can connect to the APM Server, you can send requests to the instrumented service and look for lines
containing `[request]` in the APM Server logs.

If you don't see any requests, it might be that SSL is <<ssl-client-fails, misconfigured>> or that the host is wrong.
Particularly, if you are using Docker, ensure to bind to the right interface (for example, set
`apm-server.host = 0.0.0.0:8200` to match any IP) and set the `SERVER_URL` setting in the agent accordingly.



If you see requests coming trough the APM Server but they are not accepted (response code other than `202`), consider
the response code to narrow down the possible causes (see sections bellow).

Another reason for data not showing up is that the agent is not auto-instrumenting something you were expecting, check
the {apm-agents-ref}/index.html[agent documentation] for details on what is automatically instrumented.

[[bad-request]]
[float]
=== HTTP 400: Data decoding error / Data validation error

The most likely cause for this is that you are using non compatible versions of agent and APM Server.
For instance, APM Server 6.2.0 changed the Intake API spec and requires a minimum version of each agent.

[[unauthorized]]
[float]
=== HTTP 401: Invalid token

The <<secret-token, secret token>> in the request header doesn't match the configured in the APM Server.

[[forbidden]]
[float]
=== HTTP 403: Forbidden request

Either you are sending requests to a <<rum, RUM>> endpoint without the `apm-server.rum` setting enabled, or a request
is coming from an origin not whitelisted in `apm-server.rum.allow_origins`.

[[request-too-large]]
[float]
=== HTTP 413: Request body too large

The agent is collecting too much data and sending it all at once. Consider increasing the `apm-server.max_unzipped_size`
setting in the APM Server, and decreasing the `FLUSH_INTERVAL` setting in the agent.

[[rate-limited]]
[float]
=== HTTP 429: Too many requests

This might only occur for <<rum, RUM>>, as requests might come in short intervals from many instrumented apps.
Consider increasing the `apm-server.rum.rate_limit` setting in the APM Server and the `FLUSH_INTERVAL` setting in the
agent.

[[queue-full]]
[float]
=== HTTP 503: Queue is full

APM Server has an internal queue that buffers documents until they can be delivered to Elasticsearch.
The internal queue helps to:

* alleviate problems that might occur if Elasticsearch is intermittently unavailable
* handle large spikes of data arriving at the APM Server at the same time
* send documents to Elasticsearch in bulk, instead of individually

When the internal queue has reached the maximum buffer size, 
APM Server returns an HTTP 503 status with the message "Queue is full".

A full queue generally means that the agents collect more data than APM server is able to deliver to Elasticsearch.
This might happen when APM Server is not configured properly for the size of your Elasticsearch cluster,
or because your Elasticsearch cluster is underpowered or not configured properly for the given workload.

The queue can also fill up if Elasticsearch is unavailable for a prolonged period,
it runs out of disk space,
or a sudden spike of data arrives at the APM Server.

If the APM Server only returns 503 responses, it might indicate that an Elasticsearch disk is full.
If the APM Server returns interleaved 503 and 202 responses, it might indicate that the APM Server can't process that much data.

You have a few options to solve this problem: 

* <<reduce-storage, Reduce storage>>
* <<tune-output-config>>
* <<adjust-queue-size>>
* <<tune-es, Tune Elasticsearch for higher ingestion>>

[[request-timed-out]]
[float]
=== HTTP 503: Request timed out waiting to be processed

There is a limit to the number of requests that the APM Server can process concurrently.
The APM Server returns an HTTP 503 status with the message "Request timed out waiting to be processed" when the limit is reached and the request from an agent is blocked.
This limit is determined by the `apm-server.concurrent_requests` configuration parameter.

To alleviate this problem,
you can try to:

* <<reduce-sample-rate>>
* <<reduce-stacktrace>>
* <<reduce-payload-size>>
* <<adjust-concurrent-requests>>
* <<add-apm-server-nodes>>

