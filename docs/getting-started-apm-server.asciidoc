[[getting-started-apm-server]]
== Getting Started With APM Server

// This section was copied from the APM Overview
// Switch to tagged regions when available
The easiest way to get started with APM Server is by using our
https://www.elastic.co/cloud/elasticsearch-service[hosted {es} Service] on
Elastic Cloud. The {es} Service is available on AWS, GCP, and Azure,
and automatically configures APM Server to work with {es} and {kib}.

[float]
=== Hosted Elasticsearch Service

Skip managing your own {es}, {kib}, and APM Server by using our
https://www.elastic.co/cloud/elasticsearch-service[hosted {es} Service] on
Elastic Cloud.

image::images/apm-architecture-cloud.png[Install Elastic APM on cloud]

https://www.elastic.co/cloud/elasticsearch-service/signup[Try out the {es} Service for free],
and then begin configuring your own user settings right in the Elasticsearch Service Console.
Any changes are automatically appended to the `apm-server.yml` configuration file for your instance.
A full list of configuration options is available in Elastic Cloud's
{cloud}/ec-manage-apm-settings.html[Add APM user settings].

[float]
=== Install and manage the stack yourself

If you'd rather install the stack yourself, first see the https://www.elastic.co/support/matrix[Elastic Support Matrix] for information about supported operating systems and product compatibility.

You'll need:

* *{es}* for storing and indexing data.
* *{kib}* for visualizing with the APM UI.

We recommend you use the same version of Elasticsearch, Kibana, and APM Server.

image::images/apm-architecture-diy.png[Install Elastic APM yourself]

See {stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}]
for more information about installing these products.
After installing the {stack}, read the following topics to learn how to install,
configure, and start APM Server:

* <<installing>>
* <<apm-server-configuration>>
* <<apm-server-starting>>
* <<next-steps>>

// *******************************************************
// STEP 1
// *******************************************************

[[installing]]
=== Step 1: Install

NOTE: *Before you begin*: If you haven't installed the {stack}, do that now.
See {stack-gs}/get-started-elastic-stack.html[Getting started with the {stack}].

To download and install {beatname_uc}, use the commands below that work with your system.
If you use `apt` or `yum`, you can <<setup-repositories,install {beatname_uc} from our repositories>>
to update to the newest version more easily.

ifeval::["{release-state}"!="unreleased"]
See our https://www.elastic.co/downloads/apm[download page]
for other installation options, such as 32-bit images.
endif::[]

[[deb]]
*deb:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
----------------------------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-amd64.deb
sudo dpkg -i apm-server-{version}-amd64.deb
----------------------------------------------------------------------

endif::[]

[[rpm]]
*RPM:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
----------------------------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-x86_64.rpm
sudo rpm -vi apm-server-{version}-x86_64.rpm
----------------------------------------------------------------------

endif::[]

[[linux]]
*Other Linux:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-linux-x86_64.tar.gz
tar xzvf apm-server-{version}-linux-x86_64.tar.gz
------------------------------------------------
endif::[]

[[mac]]
*Mac:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-darwin-x86_64.tar.gz
tar xzvf apm-server-{version}-darwin-x86_64.tar.gz
------------------------------------------------

endif::[]

[[installing-on-windows]]
*Windows:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

. Download the APM Server Windows zip file from the
https://www.elastic.co/downloads/apm/apm-server[downloads page].

. Extract the contents of the zip file into `C:\Program Files`.

. Rename the `apm-server-<version>-windows` directory to `APM-Server`.

. Open a PowerShell prompt as an Administrator (right-click the PowerShell icon and select *Run As Administrator*).
If you are running Windows XP, you may need to download and install PowerShell.

. From the PowerShell prompt, run the following commands to install APM Server as a Windows service:
+
[source,shell]
----------------------------------------------------------------------
PS > cd 'C:\Program Files\APM-Server'
PS C:\Program Files\APM-Server> .\install-service-apm-server.ps1
----------------------------------------------------------------------

NOTE: If script execution is disabled on your system,
you need to set the execution policy for the current session to allow the script to run.
For example: `PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-apm-server.ps1`.

endif::[]

[[brew]]
*Homebrew:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

You can install the Elastic Stack, including APM Server, on macOS with the
https://brew.sh/[Homebrew] package manager. First, tap the Elastic Homebrew repository:

[source,sh]
-------------------------
brew tap elastic/tap
-------------------------

Next, use `brew install` to install the default distribution of APM Server:

[source,sh]
-------------------------
brew install elastic/tap/apm-server-full
-------------------------

This installs the most recently released default distribution of APM Server.
To install the OSS distribution, specify `elastic/tap/apm-server-oss`.

endif::[]

[[docker]]
*Docker:*

See <<running-on-docker, Running on Docker>> for deploying Docker containers.

// *******************************************************
// STEP 2
// *******************************************************

[[apm-server-configuration]]
=== Step 2: Set up and configure

[float]
==== Elastic Cloud

If you're running APM Server in Elastic cloud, you can configure your own user settings right in the Elasticsearch Service Console.
Any changes are automatically appended to the `apm-server.yml` configuration file for your instance.

Full details are available in the {cloud}/ec-manage-apm-settings.html[APM user settings] documentation.

[float]
[[index-template-config]]
==== Self installation

It is recommend that you run the `setup` command before starting {beatname_uc}.

The `setup` command sets up the initial environment, including the Elasticsearch index template,
and ILM write alias. In Elasticsearch, {ref}/indices-templates.html[index templates]
are used to define field settings and mappings.

IMPORTANT: The {kibana-ref}/xpack-apm.html[Kibana APM UI] relies on specific mappings.
Changing the default mapping or failing to setup the initial mapping may break the APM UI.

The recommended index template file for {beatname_uc} is installed by the {beatname_uc} packages.
To see the template that comes bundled with {beatname_uc}, run `apm-server export template`.
If you accept the default configuration,
{beatname_uc} will load the template automatically after successfully connecting to Elasticsearch.
If a template already exists, it will not be overwritten unless you've explicitly configured {beatname_uc} to do so.
Running `apm-server -e setup template` will force a template overwrite.

NOTE: Index templates cannot be applied retroactively.
They are only applied at index creation time.
Changing a template will have no impact on existing indices.
This means you need to ensure the correct index template is loaded from day one.

Full details on the `setup` command are below:

// This include attribute uses tagged regions to pull the **setup-command** instructions
// in from command-reference.asciidoc. There is also a tagged region for **attributes**
// as these are defined locally in the command reference file, but must also be accessed here.
include::{libbeat-dir}/command-reference.asciidoc[tag=attributes]
include::{libbeat-dir}/command-reference.asciidoc[tag=setup-command-tag]

Once APM Server has been set up, you can edit the `apm-server.yml` configuration file to customize it to your needs.
The location of this file varies by platform, but the <<directory-layout>> will help you locate it.
All available configuration options are outlined in
{apm-server-ref-v}/configuring-howto-apm-server.html[configuring APM Server].

// *******************************************************
// STEP 3
// *******************************************************

[[apm-server-starting]]
=== Step 3: Start

In a production environment, you would put APM Server on its own machines,
similar to how you run Elasticsearch.
You _can_ run it on the same machines as Elasticsearch, but this is not recommended,
as the processes will be competing for resources.

To start APM Server, run:

[source,bash]
----------------------------------
./apm-server -e
----------------------------------

NOTE: The `-e` <<global-flags,global flag>> enables logging to stderr and disables syslog/file output.
Remove this flag if you've enabled logging in the configuration file.
For linux systems, see <<running-with-systemd,APM Server status and logs>>.

You should see APM Server start up.
It will try to connect to Elasticsearch on localhost port `9200` and expose an API to agents on port `8200`.
You can change the defaults in `apm-server.yml` or by supplying a different address on the command line:

[source,bash]
----------------------------------
./apm-server -e -E output.elasticsearch.hosts=ElasticsearchAddress:9200 -E apm-server.host=localhost:8200
----------------------------------

[float]
[[running-deb-rpm]]
==== Debian Package / RPM

For Debian package and RPM installations, we recommend the apm-server process runs as a non-root user.
Therefore, these installation methods create an `apm-server` user which you can use to start the process.
In addition, {beatname_uc} will only start if the configuration file is
<<config-file-ownership,owned by the user running the process>>.

To start the APM Server in this case, run:

[source,bash]
----------------------------------
sudo -u apm-server apm-server [<argument...>]
----------------------------------

By default, APM Server loads its configuration file from `/etc/apm-server/apm-server.yml`.
See the <<_deb_and_rpm,deb & rpm default paths>> for a full directory layout.

[float]
[[running-brew]]
==== Brew

To start APM Server, run:

["source","sh"]
-----
apm-server -e
-----

To have launchd start APM Server and restart it at login, run:

["source","sh"]
-----
brew services start elastic/tap/apm-server-full
-----

// *******************************************************
// STEP 4
// *******************************************************

[[next-steps]]
=== Step 4: Next steps

// Use a tagged region to pull APM Agent information from the APM Overview
If you haven't already, you can now install APM Agents in your services!

* {apm-go-ref-v}/introduction.html[Go agent]
* {apm-java-ref-v}/intro.html[Java agent]
* {apm-dotnet-ref-v}/intro.html[.NET agent]
* {apm-node-ref-v}/intro.html[Node.js agent]
* {apm-py-ref-v}/getting-started.html[Python agent]
* {apm-ruby-ref-v}/introduction.html[Ruby agent]
* {apm-rum-ref-v}/intro.html[JavaScript Real User Monitoring (RUM) agent]

Once you have at least one Agent sending data to APM Server,
you can start visualizing your data in the {kibana-ref}/xpack-apm.html[Kibana APM UI].

// Shared APM & YUM
include::{libbeat-dir}/repositories.asciidoc[]

// Shared docker
include::{libbeat-dir}/shared-docker.asciidoc[]