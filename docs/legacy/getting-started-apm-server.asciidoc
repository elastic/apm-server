[[getting-started-apm-server]]
== Getting started with APM Server

++++
<titleabbrev>Get started</titleabbrev>
++++

IMPORTANT: {deprecation-notice-installation}

IMPORTANT: Starting in version 8.0.0, {fleet} uses the APM integration to set up and manage APM index templates,
{ilm-init} policies, and ingest pipelines. APM Server will only send data to {es} _after_ the APM integration has been installed.

The easiest way to get started with Elastic APM is by using our
{ess-product}[hosted {es} Service] on {ecloud}.
The {es} Service is available on AWS, GCP, and Azure,
and automatically configures APM Server to work with {es} and {kib}.

[float]
=== Hosted {es} Service

Skip managing your own {es}, {kib}, and APM Server by using our
{ess-product}[hosted {es} Service] on
{ecloud}.

image::images/apm-architecture-cloud.png[Install Elastic APM on cloud]

{ess-trial}[Try out the {es} Service for free],
then see {cloud}/ec-manage-apm-settings.html[Add APM user settings] for information on how to configure Elastic APM.

[float]
=== Install and manage the stack yourself

If you'd rather install the stack yourself, first see the https://www.elastic.co/support/matrix[Elastic Support Matrix] for information about supported operating systems and product compatibility.

You'll need:

* *{es}* for storing and indexing data.
* *{kib}* for visualizing with the APM UI.

We recommend you use the same version of {es}, {kib}, and APM Server.

image::images/apm-architecture-diy.png[Install Elastic APM yourself]

See {stack-ref}/installing-elastic-stack.html[Installing the {stack}]
for more information about installing these products.
After installing the {stack}, read the following topics to learn how to install,
configure, and start APM Server:

* <<installing>>
* <<apm-server-configuration>>
* <<apm-server-starting>>
* <<next-steps>>

// *******************************************************
// STEP 1
// *******************************************************

[[installing]]
=== Step 1: Install

IMPORTANT: {deprecation-notice-installation}

NOTE: *Before you begin*: If you haven't installed the {stack}, do that now.
See {stack-ref}/installing-elastic-stack.html[Learn how to install the
{stack} on your own hardware].

To download and install {beatname_uc}, use the commands below that work with your system.
If you use `apt` or `yum`, you can <<setup-repositories,install {beatname_uc} from our repositories>>
to update to the newest version more easily.

ifeval::["{release-state}"!="unreleased"]
See our https://www.elastic.co/downloads/apm[download page]
for other installation options, such as 32-bit images.
endif::[]

[[deb]]
*deb:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
----------------------------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-amd64.deb
sudo dpkg -i apm-server-{version}-amd64.deb
----------------------------------------------------------------------

endif::[]

[[rpm]]
*RPM:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
----------------------------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-x86_64.rpm
sudo rpm -vi apm-server-{version}-x86_64.rpm
----------------------------------------------------------------------

endif::[]

[[linux]]
*Other Linux:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-linux-x86_64.tar.gz
tar xzvf apm-server-{version}-linux-x86_64.tar.gz
------------------------------------------------
endif::[]

[[mac]]
*Mac:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

["source","sh",subs="attributes"]
------------------------------------------------
curl -L -O {downloads}/apm-server-{version}-darwin-x86_64.tar.gz
tar xzvf apm-server-{version}-darwin-x86_64.tar.gz
------------------------------------------------

endif::[]

[[installing-on-windows]]
*Windows:*

ifeval::["{release-state}"=="unreleased"]

Version {version} of APM Server has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

. Download the APM Server Windows zip file from the
https://www.elastic.co/downloads/apm/apm-server[downloads page].

. Extract the contents of the zip file into `C:\Program Files`.

. Rename the `apm-server-<version>-windows` directory to `APM-Server`.

. Open a PowerShell prompt as an Administrator (right-click the PowerShell icon and select *Run As Administrator*).
If you are running Windows XP, you may need to download and install PowerShell.

. From the PowerShell prompt, run the following commands to install APM Server as a Windows service:
+
[source,shell]
----------------------------------------------------------------------
PS > cd 'C:\Program Files\APM-Server'
PS C:\Program Files\APM-Server> .\install-service-apm-server.ps1
----------------------------------------------------------------------

NOTE: If script execution is disabled on your system,
you need to set the execution policy for the current session to allow the script to run.
For example: `PowerShell.exe -ExecutionPolicy UnRestricted -File .\install-service-apm-server.ps1`.

endif::[]

[[docker]]
*Docker:*

See <<running-on-docker, Running on Docker>> for deploying Docker containers.

// *******************************************************
// STEP 2
// *******************************************************

[[apm-server-configuration]]
=== Step 2: Set up and configure

IMPORTANT: {deprecation-notice-installation}

[float]
==== {ecloud}

If you're running APM in Elastic cloud,
see {cloud}/ec-manage-apm-settings.html[Add APM user settings] for information on how to configure Elastic APM.

[float]
==== Self installation

// This content is reused in the upgrading guide
// tag::why-apm-integration[]
Starting in version 8.0.0, {fleet} uses the APM integration to set up and manage APM index templates,
{ilm-init} policies, and ingest pipelines. APM Server will only send data to {es} _after_ the APM integration has been installed.
// end::why-apm-integration[]

[float]
===== Install the APM integration

// This content is reused in the upgrading guide
// tag::install-apm-integration[]
NOTE: An internet connection is required to install the APM integration.
If your environment has network traffic restrictions, there are ways to work around this requirement.
See {fleet-guide}/air-gapped.html[Air-gapped environments] for more information.

// lint ignore elastic-agent
. Open {kib} and select **Add integrations** > **Elastic APM**.
. Click **APM integration**.
. Click **Add Elastic APM**.
. Click **Save and continue**.
. Click **Add Elastic Agent later**. You do not need to run an {agent} to complete the setup.
// end::install-apm-integration[]

[float]
===== Configure APM

Configure APM by editing the `apm-server.yml` configuration file.
The location of this file varies by platform--see the <<directory-layout>> for help locating it.

A minimal configuration file might look like this:

[source,yaml]
----
apm-server:
  host: "localhost:8200" <1>
output.elasticsearch:
  hosts: ["localhost:9200"] <2>
  username: "elastic" <3>
  password: "changeme" <4>
----
<1> The `host:port` APM Server listens on.
<2> The {es} `host:port` to connect to.
<3> This example uses basic authentication.
The user provided here needs the privileges required to publish events to {es}.
To create a dedicated user for this role, see <<privileges-to-publish-events>>.
<4> We've hard-coded the password here,
but you should store sensitive values in the <<keystore,secrets keystore>>.

All available configuration options are outlined in
{apm-server-ref-v}/configuring-howto-apm-server.html[configuring APM Server].

// *******************************************************
// STEP 3
// *******************************************************

[[apm-server-starting]]
=== Step 3: Start

IMPORTANT: {deprecation-notice-installation}

In a production environment, you would put APM Server on its own machines,
similar to how you run {es}.
You _can_ run it on the same machines as {es}, but this is not recommended,
as the processes will be competing for resources.

To start APM Server, run:

[source,bash]
----------------------------------
./apm-server -e
----------------------------------

NOTE: The `-e` <<global-flags,global flag>> enables logging to stderr and disables syslog/file output.
Remove this flag if you've enabled logging in the configuration file.
For Linux systems, see <<running-with-systemd,APM Server status and logs>>.

You should see APM Server start up.
It will try to connect to {es} on localhost port `9200` and expose an API to agents on port `8200`.
You can change the defaults in `apm-server.yml` or by supplying a different address on the command line:

[source,bash]
----------------------------------
./apm-server -e -E output.elasticsearch.hosts=ElasticsearchAddress:9200 -E apm-server.host=localhost:8200
----------------------------------

[float]
[[running-deb-rpm]]
==== Debian Package / RPM

For Debian package and RPM installations, we recommend the `apm-server` process runs as a non-root user.
Therefore, these installation methods create an `apm-server` user which you can use to start the process.
In addition, {beatname_uc} will only start if the configuration file is
<<config-file-ownership,owned by the user running the process>>.

To start the APM Server in this case, run:

[source,bash]
----------------------------------
sudo -u apm-server apm-server [<argument...>]
----------------------------------

By default, APM Server loads its configuration file from `/etc/apm-server/apm-server.yml`.
See the <<_deb_and_rpm,deb & rpm default paths>> for a full directory layout.

// *******************************************************
// STEP 4
// *******************************************************

[[next-steps]]
=== Step 4: Next steps

IMPORTANT: {deprecation-notice-installation}

// Use a tagged region to pull APM Agent information from the APM Overview
If you haven't already, you can now install APM Agents in your services!

* {apm-go-ref-v}/introduction.html[Go agent]
* {apm-ios-ref-v}/intro.html[iOS agent]
* {apm-java-ref-v}/intro.html[Java agent]
* {apm-dotnet-ref-v}/intro.html[.NET agent]
* {apm-node-ref-v}/intro.html[Node.js agent]
* {apm-php-ref-v}/intro.html[PHP agent]
* {apm-py-ref-v}/getting-started.html[Python agent]
* {apm-ruby-ref-v}/introduction.html[Ruby agent]
* {apm-rum-ref-v}/intro.html[JavaScript Real User Monitoring (RUM) agent]

Once you have at least one {apm-agent} sending data to APM Server,
you can start visualizing your data in the {kibana-ref}/xpack-apm.html[{apm-app}].

If you're migrating from Jaeger, see <<jaeger>>.

// Shared APM & YUM
include::{libbeat-dir}/repositories.asciidoc[]

// Shared docker
include::{libbeat-dir}/shared-docker.asciidoc[]
