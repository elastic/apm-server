[[sourcemap-api]]
== Sourcemap API

NOTE: Sourcemap Support is an experimental feature.

The APM Server exposes an API Endpoint to upload sourcemaps. 
When <<sourcemap-endpoint,sourcemaps are uploaded>> and <<sourcemap-enable,frontend support is enabled>>, sourcemapping is automatically applied to all `errors` and `transactions` recorded with the https://github.com/elastic/apm-agent-js-base[experimental javascript frontend agent]. 


[[sourcemap-endpoint]]
[float]
=== Endpoint
To upload a sourcemap you need to send a `HTTP POST` request to the APM Server `sourcemaps` endpoint:

[source,bash]
------------------------------------------------------------
http(s)://{hostname}:{port}/v1/client-side/sourcemaps
------------------------------------------------------------


[[sourcemap-request-fields]]
[float]
=== Request Fields
The request must be sent using `Content-Type` `multipart/form-data`. 
The request must contain following fields:

* `service_name`
* `service_version`
* `bundle_filepath`
* `sourcemap`: The sourcemap must be attached to the request as a `file` upload.
The sourcemap must match the specification for 
https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k[Sourcemap Revision 3].


The combination of the `service_name`, `service_version` and `bundle_filepath` is used to identify a `sourcemap`. See <<sourcemap-apply,applying sourcemaps>> for more information.  


[[sourcemap-enable]]
[float]
=== Enable Frontend Support
To try out experimental frontend support `apm-server.frontend.enabled` needs to be set to `true`.
See https://github.com/elastic/apm-server/blob/{doc-branch}/apm-server.reference.yml[`apm-server.reference.yml`] for more configuration options.


[[sourecmap-api-examples]]
[float]
=== Examples

Send an example sourcemap to the APM Server:

["source","sh",subs="attributes"]
---------------------------------------------------------------------------
curl -X POST http://127.0.0.1:8200/v1/client-side/sourcemaps \
  -F service_name="test-service" 
  -F service_version="1.0" 
  -F bundle_filepath="/static/js/main.js.map" 
  -F sourcemap=@docs/data/intake-api/generated/sourcemap/bundle.js.map 
---------------------------------------------------------------------------


[[sourcemap-json-example]]
[float]
==== Sourcemap V3 Example File

[source,json]
----
include::./data/intake-api/generated/sourcemap/bundle.js.map[]
----


[[sourcemap-apply]]
[float]
=== Applying Sourcemaps
Sourcemapping is applied to every `stacktrace frame` of a record.
Following information is used to find the coresponding sourcemap entry.

* the record's `service.name` is matched againts `service_name` of the uploaded sourcemaps.
* the record's `service.version` is matched against `service_version` of the uploaded sourcemaps.
* for every `stacktrace frame` of the record `abs_path` is matched against `bundle_filepath` of the uploaded sourcemaps. 

If multiple sourcemaps with the same meta information are found, the sourcemap with the latest upload timestamp is used. 

When a matching sourcemap is found and the sourcemap mapping can be applied to the stacktrace frame,
the frames information is updated for `filename`, `function`, `abs path`, `line number` and `column number`.
