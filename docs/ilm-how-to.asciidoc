[[ilm-how-to]]
=== Index lifecycle management

Index lifecycle policies allow you to automate the
lifecycle of your APM indices as they grow and age.
A default policy is applied to each APM data stream,
but can be customized depending on your business needs.

See {ref}/index-lifecycle-management.html[ILM: Manage the index lifecycle] to learn more.

[discrete]
[[index-lifecycle-policies-default]]
=== Default policies

The table below describes the default index lifecycle policy applied to each APM data stream.
Each policy includes a rollover and delete definition:

* **Rollover**: Using rollover indices prevents a single index from growing too large and optimizes indexing and search performance. Rollover, i.e. writing to a new index, occurs after either an age or size metric is met.
* **Delete**: The delete phase permanently removes the index after a time threshold is met.

[cols="1,1,1",options="header"]
|===
|Data stream
|Rollover after
|Delete after

|`traces-apm`
|30 days / 50 gb
|10 days

|`traces-apm.rum`
|30 days / 50 gb
|90 days

|`metrics-apm.profiling`
|30 days / 50 gb
|10 days

|`metrics-apm.internal`
|30 days / 50 gb
|90 days

|`metrics-apm.app`
|30 days / 50 gb
|90 days

|`logs-apm.error`
|30 days / 50 gb
|10 days

|===

The APM index lifecycle policies can be viewed in {kib}.
Navigate to *Stack Management* / *Index Lifecycle Management*, and search for `apm`.

[discrete]
[[data-streams-custom-policy]]
=== Configure a custom index lifecycle policy

This tutorial explains how to apply a custom index lifecycle policy to the
`traces-apm` data stream with the `default` namespace.

[discrete]
[[data-streams-custom-one]]
=== Step 1: View data streams

The **Data Streams** view in {kib} shows you the data streams,
index templates, and index lifecycle policies associated with a given integration.

. Navigate to **Stack Management** > **Index Management** > **Data Streams**.
. Search for `apm` to see all data streams associated with APM data.
. Select the `traces-apm-default` data stream to view its associated index template and ILM policy.
As you can see, the data stream follows the <<apm-data-streams-naming-scheme>> and starts with its type, `traces-`.
+
[role="screenshot"]
image::images/data-stream-overview.png[Data streams info]

[discrete]
[[data-streams-custom-two]]
=== Step 2: Create an index lifecycle policy

. Navigate to **Stack Management** > **Index Lifecycle Policies**.
. Click **Create policy**.

Name your new policy. I've chosen `custom-traces-apm-default-policy`.
Customize the policy to your liking, and when you're done, click **Save policy**.

[discrete]
[[data-streams-custom-three]]
=== Step 3: Create a component template

To apply your new index lifecycle policy to a data stream,
and to ensure the policy continues to be applied in future versions,
you must create a component template.
The component template name must start with `.`, follow the data stream naming scheme,
and end with `@custom`:

[source,text]
----
.<type>-<dataset>-<namespace>@custom
----

For example, to create custom index settings for the `traces-apm` data stream with a namespace of `default`,
the component template name would be:

[source,text]
----
.traces-apm-default@custom
----

. Navigate to **Stack Management** > **Index Management** > **Component Templates**
. Click **Create component template**.
. Use the template above to set the name--in this case, `.traces-apm-default@custom`. Click **Next**.
. Under **Index settings**, set the ILM policy name created in the previous step:
+
[source,json]
----
{
  "lifecycle": {
    "name": "custom-traces-apm-default-policy"
  }
}
----
. Continue to **Review** and ensure your request looks similar to the image below.
If it does, click **Create component template**.
+
[role="screenshot"]
image::images/create-component-template.png[Create component template]

[discrete]
[[data-streams-custom-four]]
=== Step 4: Clone and modify the existing index template

Now that you've created a component template,
you need to create an index template to apply the changes to the correct data stream.
The easiest way to do this is to duplicate and modify the integration's existing index template.

WARNING: When duplicating the index template, do not change or remove any managed properties. This may result in problems when upgrading.

. Navigate to **Stack Management** > **Index Management** > **Index Templates**.
. Find the index template you want to clone. The index template will have the `<type>` and `<dataset>` in its name,
but not the `<namespace>`. In this case, it's `traces-apm`.
. Select **Actions** > **Clone**
. Set the name of the new index template to `traces-apm-default`.
. Change the index pattern to include a namespace-- in this case, `traces-apm-default*`.
This ensures the previously created component template is only applied to the `default` namespace.
. Set the priority to `250`. This ensures that the new index template takes precedence over other index templates that match the index pattern.
. Under **Component templates**, search for and add the component template created in the previous step.
To ensure your namespace-specific settings are applied over other custom settings,
the new template should be added below the existing `@custom` template.
. Create the index template.

[discrete]
[[data-streams-custom-five]]
=== Step 5: Roll over the data stream (optional)

To confirm that the data stream is now using the new index template and ILM policy,
you can either repeat <<data-streams-custom-one,step one>>, or navigate to **Dev Tools ** and run the following:

[source,bash]
----
GET /_data_stream/traces-apm-default <1>
----
<1> The name of the data stream we've been hacking on

The result should include the following:

[source,json]
----
{
  "data_streams" : [
    {
      ...
      "template" : "traces-apm-default", <1>
      "ilm_policy" : "custom-traces-apm-default-policy", <2>
      ...
    }
  ]
}
----
<1> The name of the custom index template created in step three
<2> The name of the ILM policy applied to the new component template in step two

New ILM policies only take effect when new indices are created,
so you either must wait for a rollover to occur (usually after 30 days or when the index size reaches 50GB),
or force a rollover using the {ref}/indices-rollover-index.html[{es} rollover API]:

[source,bash]
----
POST /traces-apm-default/_rollover/
----
