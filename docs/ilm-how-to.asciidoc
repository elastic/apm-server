//////////////////////////////////////////////////////////////////////////
// This content is reused in the Legacy ILM documentation
//////////////////////////////////////////////////////////////////////////

[[ilm-how-to]]
=== {ilm-cap}

:append-legacy:
// tag::ilm-integration[]

Index lifecycle policies allow you to automate the
lifecycle of your APM indices as they grow and age.
A default policy is applied to each APM data stream,
but can be customized depending on your business needs.

See {ref}/index-lifecycle-management.html[{ilm-init}: Manage the index lifecycle] to learn more.

[discrete]
[id="index-lifecycle-policies-default{append-legacy}"]
=== Default policies

The table below describes the default index lifecycle policy applied to each APM data stream.
Each policy includes a rollover and delete definition:

* **Rollover**: Using rollover indices prevents a single index from growing too large and optimizes indexing and search performance. Rollover, i.e. writing to a new index, occurs after either an age or size metric is met.
* **Delete**: The delete phase permanently removes the index after a time threshold is met.

[cols="1,1,1",options="header"]
|===
|Data stream
|Rollover after
|Delete after

|`traces-apm`
|30 days / 50 GB
|10 days

|`traces-apm.rum`
|30 days / 50 GB
|90 days

|`metrics-apm.internal`
|30 days / 50 GB
|90 days

|`metrics-apm.app`
|30 days / 50 GB
|90 days

|`logs-apm.error`
|30 days / 50 GB
|10 days

|===

The APM index lifecycle policies can be viewed in {kib}.
Navigate to *{stack-manage-app}* / *Index Lifecycle Management*, and search for `apm`.

TIP: Default {ilm-init} policies can change between minor versions.
This is not considered a breaking change as index management should continually improve and adapt to new features.

[discrete]
[id="data-streams-custom-policy{append-legacy}"]
=== Configure a custom index lifecycle policy

When the APM integration is installed, {fleet} creates a default `*@custom` component template for each data stream.
The easiest way to configure a custom index lifecycle policy per data stream is to edit this template.

This tutorial explains how to apply a custom index lifecycle policy to the `traces-apm` data stream.

[discrete]
[id="data-streams-custom-one{append-legacy}"]
=== Step 1: View data streams

The **Data Streams** view in {kib} shows you the data streams,
index templates, and index lifecycle policies associated with a given integration.

. Navigate to **{stack-manage-app}** > **Index Management** > **Data Streams**.
. Search for `traces-apm` to see all data streams associated with APM trace data.
. In this example, I only have one data stream because I'm only using the `default` namespace.
You may have more if your setup includes multiple namespaces.
+
[role="screenshot"]
image::images/data-stream-overview.png[Data streams info]

[discrete]
[id="data-streams-custom-two{append-legacy}"]
=== Step 2: Create an index lifecycle policy

. Navigate to **{stack-manage-app}** > **Index Lifecycle Policies**.
. Click **Create policy**.

Name your new policy; For this tutorial, I've chosen `custom-traces-apm-policy`.
Customize the policy to your liking, and when you're done, click **Save policy**.

[discrete]
[id="data-streams-custom-three{append-legacy}"]
=== Step 3: Apply the index lifecycle policy

To apply your new index lifecycle policy to the `traces-apm-*` data stream,
edit the `<data-stream-name>@custom` component template.

. Click on the **Component Template** tab and search for `traces-apm`.
. Select the `traces-apm@custom` template and click **Manage** > **Edit**.
. Under **Index settings**, set the {ilm-init} policy name created in the previous step:
+
[source,json]
----
{
  "lifecycle": {
    "name": "custom-traces-apm-policy"
  }
}
----
. Continue to **Review** and ensure your request looks similar to the image below.
If it does, click **Create component template**.
+
[role="screenshot"]
image::images/create-component-template.png[Create component template]

[discrete]
[id="data-streams-custom-four{append-legacy}"]
=== Step 4: Roll over the data stream (optional)

To confirm that the data stream is now using the new index template and {ilm-init} policy,
you can either repeat <<data-streams-custom-one,step one>>, or navigate to **{dev-tools-app}** and run the following:

[source,bash]
----
GET /_data_stream/traces-apm-default <1>
----
<1> The name of the data stream we've been hacking on appended with your <namespace>

The result should include the following:

[source,json]
----
{
  "data_streams" : [
    {
      ...
      "template" : "traces-apm-default", <1>
      "ilm_policy" : "custom-traces-apm-policy", <2>
      ...
    }
  ]
}
----
<1> The name of the custom index template created in step three
<2> The name of the {ilm-init} policy applied to the new component template in step two

New {ilm-init} policies only take effect when new indices are created,
so you either must wait for a rollover to occur (usually after 30 days or when the index size reaches 50 GB),
or force a rollover using the {ref}/indices-rollover-index.html[{es} rollover API]:

[source,bash]
----
POST /traces-apm-default/_rollover/
----

[discrete]
[id="data-streams-custom-policy-namespace{append-legacy}"]
=== Namespace-level index lifecycle policies

It is also possible to create more granular index lifecycle policies that apply to individual namespaces.
This process is similar to the above tutorial, but includes cloning and modify the existing index template to use
a new `*@custom` component template.

// end::ilm-integration[]
