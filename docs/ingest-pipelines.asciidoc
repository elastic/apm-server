//////////////////////////////////////////////////////////////////////////
// This content is reused in the Legacy ingest pipeline
//////////////////////////////////////////////////////////////////////////

[[ingest-pipelines]]
=== Parse data using ingest pipelines

:append-legacy:
// tag::ingest-pipelines[]

Ingest pipelines preprocess and enrich APM documents before indexing them.
For example, a pipeline might define one processor that removes a field, and another that renames a field.
This can be useful for ensuring data security by removing or obfuscating sensitive information.
See <<apm-data-security,data security>> for more on this topic.

The default APM pipelines are defined in index templates that {fleet} loads into {es}.
{es} then uses the index pattern in these index templates to match pipelines to APM data streams.

[discrete]
[id="default-pipeline{append-legacy}"]
=== Default ingest pipelines

// QQ: Do we want to doc these still?
// Should we doc them on a per data-stream basis?

The APM integration ships with a number of default ingest pipelines.

[horizontal]
Add ingest timestamp::
Adds an ingest timestamp (`event.ingested`) to APM events.

Add user agent::
Adds `user_agent` information to APM events.

Geo-IP data::
Enriches APM data by adding user {ref}/geoip-processor.html[Geo-IP data] to the `client.geo` field.

Remove span metadata::
To save storage, metadata fields that are available on the parent transaction, like `host`,
`kubernetes`, and `container`, are removed.

Error grouping::
Adds the `error.grouping_name` field to error documents.
This groups similar errors together in the APM app.

OpenTelemetry Metrics::
Copies well-known OpenTelemetry metrics to their Elastic APM counterparts, enabling visualization in the APM app.
For example, the OpenTelemetry metric field `runtime.jvm.gc.time` is copied to the Elastic APM metric field `jvm.gc.time`.
Metrics are duplicated so you can refer to them by either the OpenTelemetry or Elastic APM metric name.

[discrete]
[id="view-edit-default-pipelines{append-legacy}"]
=== View ingest pipelines

To view or edit a default pipelines in {kib},
select **Stack Management** > **Ingest Pipelines**.
Search for `apm`.

See {ref}/ingest.html[ingest node pipelines] for more information.

[float]
[id="custom-pipelines{append-legacy}"]
=== Add a custom ingest pipeline

IMPORTANT: Fleet-managed index templates are overwritten on reinstall/upgrade.
Any customizations to index pipelines are not persisted when upgrading.
When editing {fleet}-managed index templates, ensure that the package-provided pipeline is still called.

// tutorial would be something like this:
. Find the pipeline **Stack Management** > **Index Management** > **Index Templates** > `traces-apm`.
. **Settings** >
+
[source,json]
----
{
  "index": {
    "default_pipeline": "traces-apm-{version}"
  }
}
----

// Edit default
. **Stack Management** > **Ingest Pipelines** > Search for +traces-apm-{version}+.
. **Manage** > **Edit** to edit the default pipeline.

// Add custom pipeline
. **Stack Management** > **Ingest Pipelines** > **Create pipeline**
. Create it
. **Stack Management** > **Ingest Pipelines** > Search for +traces-apm-{version}+.
. **Manage** > **Edit** to edit the default pipeline. Add the new pipeline as the final step.

// end::ingest-pipelines[]