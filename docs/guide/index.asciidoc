include::../version.asciidoc[]
include::{asciidoc-dir}/../../shared/attributes.asciidoc[]

[[gettting-started]]
= Getting Started with APM

[[overview]]
== Overview

Elastic APM is an application performance monitoring system built on the Elastic Stack.
It allows you to monitor software services and applications in real time,
collecting detailed performance information on response time for incoming requests,
database queries,
calls to caches,
external HTTP requests,
etc.
This makes it easier to pinpoint and fix performance problems quickly.

Elastic APM also collects automatically unhandled errors and exceptions.
Errors are grouped based primarily on the stacktrace,
so you can identify new errors as they appear and keep an eye on how many times specific errors happen.

NOTE: this guide will indiscriminately use the word service for both services and applications.

[[components]]
[float]
=== APM Components

Elastic APM consists of four components:

* {ref}/index.html[Elasticsearch]
* {apm-agents-ref}/index.html[APM agents]
* {apm-server-ref}/index.html[APM Server]
* Kibana APM UI

image::apm-architecture.png[Architecture of Elastic APM]

*APM agents* are open source libraries written in the same language as your service.
You install them into your service as you would install any other library.
They instrument your code and collect performance data and errors at runtime.
This data is buffered for a short period and sent on to APM Server.

Out of the box,
APM automatically instruments web frameworks,
database drivers,
calls to caching servers,
and HTTP libraries for requests to external services.
Additionally,
agents provide an API to manually instrument anything else you find interesting.

*APM Server* is an open source application written in Go which typically runs on dedicated servers.
It listens on port 8200 by default and receives data from agents through a JSON HTTP API.
Then it creates documents from that data and stores them in Elasticsearch.

To visualize the data after it's sent to Elasticsearch,
you can use the the dedicated APM UI bundled in X-Pack,
or the pre-built open source Kibana dashboards that can be loaded directly in the Kibana UI.

[[install-and-run]]
== Install and run Elastic APM

To get started using Elastic APM,
you need to have:

* an Elasticsearch cluster and Kibana (version 5.6 or above)
* APM Server
* APM agents installed in your services


For information about setting up an Elasticsearch cluster,
see the Elasticsearch {ref}/getting-started.html[Getting Started].

The following sections show how to get started quickly with Elastic APM on a local machine.

[[apm-server]]
[float]
=== Install and run APM Server

First, https://www.elastic.co/downloads/apm/apm-server[download APM Server] for your operating system and extract the package.

In a production environment you would put APM Server on its own machines,
similar to how you run Elasticsearch.
You _can_ run it on the same machines as Elasticsearch,
but this is not recommended,
as the processes will be competing for resources.

To start APM Server, run:

[source,bash]
----------------------------------
./apm-server -e
----------------------------------

It will try to connect to Elasticsearch on localhost port 9200 and expose an API to agents on port 8200.
You can change the defaults by supplying different addresses on the command line:

[source,bash]
----------------------------------
./apm-server -e -E output.elasticsearch.hosts=ElasticsearchAddress:9200 -E apm-server.host=localhost:8200
----------------------------------

Or you can update the `apm-server.yml` configuration file:

[source,yaml]
----------------------------------
apm-server:
  host: localhost:8200

output:
  elasticsearch:
    hosts: ElasticsearchAddress:9200
----------------------------------

NOTE: If you are using an X-Pack secured version of Elastic Stack,
you need to specify credentials in the config file:

[source,yaml]
----
output.elasticsearch:
  hosts: ["ElasticsearchAddress:9200"]
  username: "elastic"
  password: "elastic"
----



[[secure-api-access]]
[float]
==== Secure access to the API
If you change the listen address from `localhost` to something that is accessible from outside of the machine,
we recommend setting up firewall rules to ensure that only your own systems can access the API.
Alternatively,
you can use a {apm-server-ref}/securing-apm-server.html[secret token and TLS].

If you have APM Server running on the same host as your service, you can configure it to listen on a Unix domain socket.

[[kibana-dashboards]]
[float]
==== Install the Kibana dashboards

From APM Server and Kibana 6.4 on you can load dashboards directly via the Kibana UI.

See an example screenshot of a Kibana dashboard:

image::kibana-dashboard.png[Screenshot of a Kibana Dashboard]

[[more-information]]
[float]
=== More information
For detailed instructions on how to install and secure APM Server in your server environment,
including details on how to run APM Server in a highly available environment,
please see {apm-server-ref}/index.html[APM Server documentation].

Once APM Server is up and running,
you need to install an agent in your service.

[[agents]]
[float]
=== Install and configure APM agents

Agents are written in the same language as your service.
Currently Elastic APM has agents for Node.js, Python, Ruby, and JavaScript.

Setting up a new service to be monitored requires installing the agent,
and configuring it with the address of your APM Server and the service name.

[[choose-service-name]]
[float]
==== Choose a service name

The service name is used by Elastic APM to differentiate between data coming from different services.

Elastic APM includes the service name field on every document that it saves in Elasticsearch.
If you change the service name after using Elastic APM,
you will see the old service name and the new service name as two separate services.
Make sure you choose a good service name before you get started.

The service name can only contain alphanumeric characters,
spaces,
underscores,
and dashes (must match `^[a-zA-Z0-9 _-]+$`).

[[nodejs-agent]]
[float]
==== Install the Node.js agent

Install the elastic-apm-node module from npm in your service:

[source,bash]
----------------------------------
npm install elastic-apm-node --save
----------------------------------

Then configure the elastic-apm-node module by adding the following lines to the top of your code:

[source,javascript]
----------------------------------
// Add this to the VERY top of the first file loaded in your app
var apm = require('elastic-apm-node').start({
  // Set required service name (allowed characters: a-z, A-Z, 0-9, -, _, and space)
  serviceName: '',

  // Use if APM Server requires a token
  secretToken: '',

  // Set custom APM Server URL (default: http://localhost:8200)
  serverUrl: ''
})
----------------------------------

The Node.js agent automatically instruments Express,
hapi,
and Koa out of the box.
See the {apm-node-ref}/index.html[APM Node.js Agent documentation] for more details.

[[python-agent]]
[float]
==== Install the Python agent

Install the Elastic APM module from pypi:

[source,bash]
----------------------------------
pip install elastic-apm
----------------------------------

The Python agent automatically instruments Django and Flask out of the box.
See the {apm-py-ref}/index.html[APM Python Agent documentation] for more details.

[[ruby-agent]]
[float]
==== Install the Ruby agent

Add the gem to your Gemfile:

[source,bash]
----------------------------------
gem 'elastic-apm'
----------------------------------

Create a config file config/elastic_apm.yml:

[source,bash]
----------------------------------
server_url: http://localhost:8200
secret_token: ''
----------------------------------

The Ruby agent automatically instruments Rails out of the box.
See the {apm-ruby-ref}/index.html[APM Ruby Agent documentation] for more details.


[[rum-agent]]
[float]
==== Install the RUM JavaScript agent

Install the agent as a dependency to your application:

[source,bash]
----------------------------------
npm install elastic-apm-js-base --save
----------------------------------

Configure the agent:

[source,bash]
----------------------------------
import { init as initApm } from 'elastic-apm-js-base'
var apm = initApm({

  // Set required service name (allowed characters: a-z, A-Z, 0-9, -, _, and space)
  serviceName: '',

  // Set custom APM Server URL (default: http://localhost:8200)
  serverUrl: 'http://localhost:8200',

  // Set service version (required for sourcemap feature)
  serviceVersion: ''
})
----------------------------------

See the {apm-rum-ref}/index.html[APM RUM JavaScript Agent documentation] for more details.


[[kibana]]
[float]
