[[apm-breaking-changes]]
== Breaking changes

This section discusses the changes that you need to be aware of when migrating your application from one version of APM to another.

* <<breaking-7.13.0>>
* <<breaking-7.12.0>>
* <<breaking-7.11.0>>
* <<breaking-7.10.0>>
* <<breaking-7.9.0>>
* <<breaking-7.8.0>>
* <<breaking-7.7.0>>
* <<breaking-7.6.0>>
* <<breaking-7.5.0>>
* <<breaking-7.4.0>>
* <<breaking-7.3.0>>
* <<breaking-7.2.0>>
* <<breaking-7.1.0>>
* <<breaking-7.0.0>>
* <<breaking-6.8.0>>
* <<breaking-6.7.0>>
* <<breaking-6.6.0>>
* <<breaking-6.5.0>>
* <<breaking-6.4.0>>

Also see {observability-guide}/whats-new.html[What's new in Observability {minor-version}].

//NOTE: The notable-breaking-changes tagged regions are re-used in the
//Installation and Upgrade Guide

// tag::notable-v8-breaking-changes[]
// end::notable-v8-breaking-changes[]
// tag::714-bc[]
// end::714-bc[]

[[breaking-7.13.0]]
=== 7.13.0 APM Breaking changes

// tag::713-bc[]
No breaking changes.
// end::713-bc[]

[[breaking-7.12.0]]
=== 7.12.0 APM Breaking changes

// tag::712-bc[]
There are three breaking changes to be aware of;
these changes only impact users ingesting data with
{apm-server-ref-v}/jaeger.html[Jaeger clients].

* Leading 0s are no longer removed from Jaeger client trace/span ids.
+
--
This change ensures distributed tracing continues to work across platforms by creating
consistent, full trace/span IDs from Jaeger clients, Elastic APM agents,
and OpenTelemetry SDKs.
--

* Jaeger spans will now have a type of "app" where they previously were "custom".
+
--
If the Jaeger span type is not inferred, it will now be "app".
This aligns with the OpenTelemetry Collector exporter
and improves the functionality of the _time spent by span type_ charts in the APM app.
--

* Jaeger spans may now have a more accurate outcome of "unknown".
+
--
Previously, a "success" outcome was assumed when a span didn't fail.
The new default assigns "unknown", and only sets an outcome of "success" or "failure" when
the outcome is explicitly known.
This change aligns with Elastic APM agents and the OpenTelemetry Collector exporter.
--
// end::712-bc[]

[[breaking-7.11.0]]
=== 7.11.0 APM Breaking changes

// tag::notable-breaking-changes[]
No breaking changes.
// end::notable-breaking-changes[]

[[breaking-7.10.0]]
=== 7.10.0 APM Breaking changes

// tag::notable-breaking-changes[]
No breaking changes.
// end::notable-breaking-changes[]

[[breaking-7.9.0]]
=== 7.9.0 APM Breaking changes

// tag::notable-v79-breaking-changes[]
No breaking changes.
// end::notable-v79-breaking-changes[]

[[breaking-7.8.0]]
=== 7.8.0 APM Breaking changes

// tag::notable-v78-breaking-changes[]
No breaking changes.
// end::notable-v78-breaking-changes[]

[[breaking-7.7.0]]
=== 7.7.0 APM Breaking changes

// tag::notable-v77-breaking-changes[]
There are no breaking changes in APM Server.
However, a previously hardcoded feature is now configurable.
Failing to follow these {apm-server-ref-v}/upgrading-to-77.html[upgrade steps] will result in increased span metadata ingestion when upgrading to version 7.7.
// end::notable-v77-breaking-changes[]

[[breaking-7.6.0]]
=== 7.6.0 APM Breaking changes

// tag::notable-v76-breaking-changes[]
No breaking changes.
// end::notable-v76-breaking-changes[]

[[breaking-7.5.0]]
=== 7.5.0 APM Breaking changes

// tag::notable-v75-breaking-changes[]

APM Server::
+
* Introduced dedicated `apm-server.ilm.setup.*` flags.
This means you can now customize ILM behavior from within the APM Server configuration.
As a side effect, `setup.template.*` settings will be ignored for ILM related templates per event type.
See {apm-server-ref}/ilm.html#ilm-setup[set up ILM] for more information.
+
* By default, ILM policies will not longer be versioned.
All event types will switch to the new default policy: rollover after 30 days or when reaching a size 50gb.
See {apm-server-ref}/ilm.html[default policy] for more information.

APM::
+
* To make use of all the new features introduced in 7.5,
you must ensure you are using version 7.5+ of APM Server and version 7.5+ of Kibana.

// end::notable-v75-breaking-changes[]

[[breaking-7.4.0]]
=== 7.4.0 APM Breaking changes

// tag::notable-v74-breaking-changes[]
No breaking changes.
// end::notable-v74-breaking-changes[]

[[breaking-7.3.0]]
=== 7.3.0 APM Breaking changes

No breaking changes.

[[breaking-7.2.0]]
=== 7.2.0 APM Breaking changes

No breaking changes.

[[breaking-7.1.0]]
=== 7.1.0 APM Breaking changes

No breaking changes.

[[breaking-7.0.0]]
=== 7.0.0 APM Breaking changes

APM Server::
+
[[breaking-remove-v1]]
**Removed deprecated Intake v1 API endpoints.** Before upgrading APM Server,
ensure all APM agents are upgraded to a version that supports APM Server â‰¥ 6.5.
View the {apm-overview-ref-v}/agent-server-compatibility.html[agent/server compatibility matrix]
to determine if your agent versions are compatible.
+
[[breaking-ecs]]
**Moved fields in Elasticsearch to be compliant with the Elastic Common Schema (ECS).**
APM has aligned with the field names defined in the
https://github.com/elastic/ecs[Elastic Common Schema (ECS)].
Utilizing this common schema will allow for easier data correlation within Elasticsearch.
+
See the {apm-overview-ref-v}/breaking-7.0.0.html#breaking-ecs[ECS field changes]
table for full details on which fields have changed.

APM UI::
+
[[breaking-new-endpoints]]
**Moved to new data endpoints.**
When you upgrade to 7.x,
data in indices created prior to 7.0 will not automatically appear in the APM UI.
We offer a Kibana Migration Assistant (in the Kibana Management section) to help you migrate your data.
The migration assistant will reindex your older data in the new ECS format.

[float]
[[ecs-compliance]]
==== Elastic Common Schema field changes

include::../field-name-changes.asciidoc[]

[[breaking-6.8.0]]
=== 6.8.0 APM Breaking changes

No breaking changes.

[[breaking-6.7.0]]
=== 6.7.0 APM Breaking changes

No breaking changes.

[[breaking-6.6.0]]
=== 6.6.0 APM Breaking changes

No breaking changes.

[[breaking-6.5.0]]
=== 6.5.0 APM Breaking changes

No breaking changes.

[[breaking-6.4.0]]
=== 6.4.0 APM Breaking changes

We previously split APM data into separate indices (transaction, span, error, etc.).
In 6.4 APM Kibana UI starts to leverage those separate indices for queries.

In case you only update Kibana but run an older version of APM Server you will not be able to see any APM data by default.
To fix this, use the {kibana-ref}/apm-settings-kb.html[Kibana APM settings] to specify the location of the APM index:
["source","sh"]
------------------------------------------------------------
apm_oss.errorIndices: apm-*
apm_oss.spanIndices: apm-*
apm_oss.transactionIndices: apm-*
apm_oss.onboardingIndices: apm-*
------------------------------------------------------------

In case you are upgrading APM Server from an older version, you might need to refresh your APM index pattern for certain APM UI features to work.
Also ensure to add the new config options in `apm-server.yml` in case you keep your existing configuration file:
["source","sh"]
------------------------------------------------------------
output.elasticsearch:
  indices:
    - index: "apm-%{[observer.version]}-sourcemap"
      when.contains:
        processor.event: "sourcemap"
    - index: "apm-%{[observer.version]}-error-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "error"
    - index: "apm-%{[observer.version]}-transaction-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "transaction"
    - index: "apm-%{[observer.version]}-span-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "span"
    - index: "apm-%{[observer.version]}-metric-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "metric"
    - index: "apm-%{[observer.version]}-onboarding-%{+yyyy.MM.dd}"
      when.contains:
        processor.event: "onboarding"
------------------------------------------------------------