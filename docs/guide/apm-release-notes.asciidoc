[[apm-release-notes]]
== Release highlights

This section summarizes the most important APM changes in each release.

For a full list of changes, see the
{apm-server-ref-v}/release-notes.html[APM Server Release Notes] or the
{kibana-ref}/release-notes.html[Kibana Release Notes].

* <<release-highlights-7.3.0>>
* <<release-highlights-7.2.0>>
* <<release-highlights-7.1.0>>
* <<release-highlights-7.0.0>>
* <<release-highlights-6.8.0>>
* <<release-notes-6.7.0>>
* <<release-notes-6.6.0>>
* <<release-notes-6.5.0>>
* <<release-notes-6.4.1>>
* <<release-notes-6.4.0>>

//NOTE: The notable-highlights tagged regions are re-used in the
//Installation and Upgrade Guide
// tag::notable-v8-highlights[]

// end::notable-v8-highlights[]

[[release-highlights-7.3.0]]
=== APM version 7.3.0

// tag::notable-v73-highlights[]

[discrete]
==== Elastic APM .NET Agent GA

https://github.com/elastic/apm-agent-dotnet/[Elastic APM agent for .NET] is now
generally available! The .NET Agent adds automatic instrumentation for ASP.NET
Core 2.x+ and Entity Framework Core 2.x+, while also providing a
{apm-dotnet-ref}/public-api.html[Public API] for the .NET agent that will allow
you to instrument any .NET custom application code.

[discrete]
==== Aggregate service breakdown charts

beta[] In addition to the transaction duration and throughput charts, the 7.3
release adds aggregated service breakdown charts for services. These charts help
you visualize where your application and services are spending most of their
time, allowing you to get to the root cause of a performance problem quickly.
These charts are available in Beta with support for certain APM agents(Java, Go,
Node.js, Python).

[role="screenshot"]
image::images/apm-highlight-breakdown-charts.png[Aggregate service breakdown charts]

[discrete]
==== Agent sample rate configuration from APM UI

beta[] Configuring sampling rate for your services is a whole lot easier with this
release. The new settings page now lets you view and configure the sampling rate
for your services from within the APM UI without restarting them. To learn more
about this configuration, see
{kibana-ref}/agent-configuration.html[APM Agent configuration].

[role="screenshot"]
image::images/apm-highlight-sample-rate.png[APM sample rate configuration in Kibana]

[discrete]
==== React support for Single Page Applications 

The 7.3 release also brings a lot of exciting changes to the Real User
Monitoring (RUM) agent. We have furthered our support of Single Page
Applications (SPA). You can now use the RUM agent to instrument your SPA written
in React.js without the need to manually create or rename transactions. For
more information, see {apm-rum-ref}/react-integration.html[React integration].

[discrete]
===== APM RUM integration with Elastic Maps

This release also makes both the geo-ip and user-agent modules enabled by
default, which makes it easier for you to integrate with
https://www.elastic.co/products/maps[Maps] so you can better understand the
performance of your RUM applications.

[role="screenshot"]
image::images/apm-highlight-rum-maps.png[APM sample rate configuration in Kibana]

// end::notable-v73-highlights[]

[[release-highlights-7.2.0]]
=== APM version 7.2.0

[float]
==== New features

*APM Server*

* Added support for {apm-server-ref-v}/ilm.html[index lifecycle management (ILM)]:
ILM enables you to automate how you want to manage your indices over time,
by automating rollovers to a new index when the existing index reaches a specified size or age.
* Added Geo-IP processing to the default ingest pipeline:
Pipelines are still disabled by default, but activation now includes a new Geo-IP pipeline.
The Geo-IP pipeline takes an extracted IP address from RUM events and stores it in the `client.geo` field.
This makes it much easier to use location data in Kibana's Visualize maps and Maps app directly:

[role="screenshot"]
image::images/kibana-geo-data.png[Kibana maps app]

*APM UI*

* APM + Uptime integration: APM transactions now include links to the Uptime UI when data is available.
* Added a global filter for {kibana-ref}/filters.html#environment-selector[service environments]:
You can now easily name and switch between environments in the APM UI.
* Added support for {kibana-ref}/metrics.html[agent specific metrics]:
Java is the first to get custom metrics in the APM UI, with more agents to follow.

[[release-highlights-7.1.0]]
=== APM version 7.1.0

No new features.


[[release-highlights-7.0.0]]
=== APM version 7.0.0

[float]
==== Breaking Changes

See <<breaking-7.0.0>>

[float]
==== New features

*APM UI*

* Added support for frozen indices.

[[release-highlights-6.8.0]]
=== APM version 6.8.0

No new features.

[[release-notes-6.7.0]]
=== APM version 6.7.0

No new features.

[[release-notes-6.6.0]]
=== APM version 6.6.0

[float]
==== New features

* Elastic APM agents now automatically record certain <<metrics,infrastructure and application metrics>>.
* Elastic APM agents support the W3C Trace Context.
All agents now have <<opentracing,OpenTracing compatible bridges>>.
* <<distributed-tracing,Distributed tracing>> is generally available.

[[release-notes-6.5.0]]
=== APM version 6.5.0

[float]
==== New features

Elastic APM now enables {apm-overview-ref-v}/distributed-tracing.html[distributed tracing].

*APM Server*

* Intake protocol v2 with distributed tracing support
* Ingest node pipeline registration and use when ingesting documents
* apm-server monitoring

*APM UI*

* Distributed tracing UI
* Monitoring UI for apm-server

*APM agents*

* Intake protocol v2 with distributed tracing support in all Elastic agents
* Java is now GA
* Go is now GA
* Python switched to contextvars instead of thread locals for context tracking in Python 3.7
* Node added support for Restify Framework, dropped support for Node.js 4 and 9

[[release-notes-6.4.1]]
=== APM version 6.4.1

[float]
==== Bug Fixes
Changes introduced in 6.4.0 potentially caused an empty APM Kibana UI.
This happened in case the APM Server was using an outdated configuration file, not configured to index events into separate indices. 
To fix this, the APM Kibana UI now falls back to use `apm-*` as default indices to query.
Users can still leverage separate indices for queries by overriding the default values described in {kibana-ref}/apm-settings-kb.html[Kibana APM settings].


[[release-notes-6.4.0]]
=== APM version 6.4.0

[float]
==== Breaking changes

See <<breaking-6.4.0>>.

[float]
==== New features

*APM Server*

* Logstash output
* Kafka output


*APM UI*

* Query bar
* Machine Learning integration: Anomaly detection on service response times
* Kibana objects (index pattern, dashboards, etc.) can now be imported via the Kibana setup instructions


*APM agents*

* RUM is now GA
* Ruby is now GA
* Java is now Beta
* Go is now Beta
* Python added instrumentation for Cassandra, PyODBC and PyMSSQL
* Node.js added instrumentation for Cassandra and broader MySQL support
