[[error-api]]
=== Error API

The APM Server exposes an API Endpoint to send error records.
Unless you are implementing an agent, you don't need to know about the specifics of this API.

The following section contains information about:

* <<error-endpoint>>
* <<error-schema-definition>>
* <<error-api-examples>>

[[error-endpoint]]
[float]
==== Endpoint

To send an error record you need to send a `HTTP POST` request to the APM Server `errors` endpoint:
[source,bash]
------------------------------------------------------------
http(s)://{hostname}:{port}/v1/errors
------------------------------------------------------------

To send a record for a frontend error (see <<frontend,experimental frontend support>>), 
you need to send a `HTTP POST` request to the APM Server `frontend errors` endpoint:

[source,bash]
------------------------------------------------------------
http(s)://{hostname}:{port}/v1/client-side/errors
------------------------------------------------------------

Information pertaining to the error record must be sent as a JSON object to the endpoint.

[[error-schema-definition]]
[float]
==== Schema Definition

The APM Server uses a JSON Schema for validating the transaction requests.
Find details on how the schema is defined:

* <<error-payload-schema>>
* <<error-error-schema>>
* <<error-service-schema>>
* <<error-system-schema>>
* <<error-context-schema>>
* <<error-stacktraceframe-schema>>
* <<error-request-schema>>
* <<error-user-schema>>


[[error-payload-schema]]
[float]
===== Payload

[source,json]
----
include::./spec/errors/payload.json[]
----

[[error-error-schema]]
[float]
===== Error

[source,json]
----
include::./spec/errors/error.json[]
----

[[error-service-schema]]
[float]
===== Service

[source,json]
----
include::./spec/service.json[]
----

[[error-system-schema]]
[float]
===== System

[source,json]
----
include::./spec/system.json[]
----

[[error-context-schema]]
[float]
===== Context

[source,json]
----
include::./spec/context.json[]
----

[[error-stacktraceframe-schema]]
[float]
===== Stacktrace Frame

[source,json]
----
include::./spec/stacktrace_frame.json[]
----

[[error-request-schema]]
[float]
===== Request

[source,json]
----
include::./spec/request.json[]
----

[[error-user-schema]]
[float]
===== User

[source,json]
----
include::./spec/user.json[]
----

[[error-api-examples]]
[float]
==== Examples

Send an example request to the APM Server:

["source","sh",subs="attributes"]
------------------------------------------------------------
curl http://localhost:8200/v1/errors \
  --header "Content-Type: application/json" \
  --data @docs/data/intake-api/generated/error/payload.json
------------------------------------------------------------

See examples on how an error request to the APM Server can look like:

* <<payload-with-error>>
* <<payload-with-minimal-exception>>
* <<payload-with-minimal-log>>

[[payload-with-error]]
[float]
===== Payload with an Error

[source,json]
----
include::./data/intake-api/generated/error/payload.json[]
----

[[payload-with-minimal-exception]]
[float]
===== Payload with an Error with minimal Exception Information

[source,json]
----
include::./data/intake-api/generated/error/minimal_payload_exception.json[]
----

[[payload-with-minimal-log]]
[float]
===== Payload with an Error with minimal Log Information

[source,json]
----
include::./data/intake-api/generated/error/minimal_payload_log.json[]
----
