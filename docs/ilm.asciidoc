[[ilm]]
[role="xpack"]
== Index lifecycle management (ILM)

Use the {ref}/getting-started-index-lifecycle-management.html[index lifecycle management (ILM)]
feature in {es} to manage your APM Server indices as they age.
With ILM, you can easily automate the management of your indices over time,
by triggering rollovers to a new index when the existing index reaches a specified size or age.

You can view and edit index lifecycle policies on the [*Index lifecycle policies*] page in {kib}.
For more information about working with the UI,
see {kibana-ref}/index-lifecycle-policies.html[Index lifecycle policies].

APM Server currently offers two ways to get started with ILM:

NOTE: If you're migrating from an existing setup,
any indices present before ILM was configured will need to be managed manually.

IMPORTANT: Changes to the default index lifecycle policy do not take effect until the current index has rolled over.

[float]
[[ilm-default]]
=== ILM default policy

Index lifecycle management will manage an index based on its defined policy.
The default ILM configuration applies *hot* and *warm* phase policies to all APM events:
`span`, `transaction`, `error`, and `metric`.
Cold and delete phases are not defined.

* *Hot* -- Rollover data when the index reaches a maximum size of 50gb or a maximum age of 30 days: `max_size: 50gb`, `max_age: 30d`, `priority: 100`
* *Warm* -- Move to warm phase after 30 days: `min_age: 30d`, `priority: 50`

[float]
[[ilm-enable]]
=== Enable ILM

ILM is enabled/disabled via the `apm-server.ilm` configuration options.
You must configure both `apm-server.ilm.enabled` and `apm-server.ilm.setup.enabled` to enable ILM for APM Server indices.

[float]
==== `apm-server.ilm.enabled`

Can be `auto`, `true`, or `false`. Defaults to `auto` in v7.3+.

`"auto"`::

`apm-server.ilm.enabled: "auto"` means APM Server will enable ILM only if all four of the conditions below are true.
If *any* of the conditions are not met, ILM will not be enabled.

* `output.elasticsearch` is enabled. 
* The Elasticsearch instance supports ILM. 
* Custom `index` or `indices` settings are not configured. 
* `apm-server.ilm.enabled: true`.

// Old stuff. Need to get rid of it
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
// If any other output is configured, ILM will be disabled.
// If it does not, ILM will be disabled.
// If custom index settings are configured,
// ILM will be disabled, as it only works with default index settings.
// If `apm-server.ilm.enabled: false`, ILM will be disabled.
// <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

`true`::

When explicitly enabling `apm-server.ilm.enabled: true`, APM Server will ignore any configured index settings.
However, the configured output must still be Elasticsearch, the instance must still support ILM,
and `apm-server.ilm.setup.enabled` must still be `true`.
If not, APM Server will fall back to ordinary index management without ILM, and an error will be logged.

`false`::

ILM can be explicitly disabled by setting `apm-server.ilm.enabled: false`.

[float]
==== `apm-server.ilm.setup.enabled`

Can be `true` or `false`. Defaults to `true`.

`true`::

When `apm-server.ilm.setup.enabled: true`, the outcome is dependent on the `apm-server.ilm.enabled` configuration:

[cols="h,,"]
|====
| `apm-server.ilm.enabled` |create policy |overwrite policy |create template |overwrite template |create alias
|`auto`/`true`  |true   |true   |true   |true   |true
|`false`        |false  |false  |true   |true   |false
|====

`false`::

When `apm-server.ilm.enabled: false`, ILM is disabled regardless of the `apm-server.ilm.enabled` setting.

// >>>>>>>>>>>>>>>>>>>>>>>>>>>
//      TO DO BELOW HERE
// <<<<<<<<<<<<<<<<<<<<<<<<<<<


// NOTES
*Policies*
* Index lifecycle management will manage an index based on its defined policy
* Policies only need to be created once, and will persist through version upgrades.

*Templates*
* An index template associates policies with indices
* To use an index lifecycle policy, you need to specify it in the index template used to create the indices.

*Aliases*
* When a rollover action is is defined in a policy, you need to define an alias. This specifies which alias to rollover on behalf of the index

// END NOTES

[float]
[[ilm-setup]]
=== ILM default policy setup

It is recommended to set up index lifecycle management (ILM) before starting APM Server.
This excludes setup from the ingestion process, which allows you to ensure ILM is set up correctly before using APM.

Run the <<setup-command>> with the ` --index-management` flag to set up the default ILM policy:

[source,js]
-----------------------
./apm-server setup --index-management
-----------------------
// CONSOLE

You can confirm the policy was created with the GET lifecycle policy API.
Here's what the transaction response looks like:

[source,js]
-----------------------
GET _ilm/policy
{
    "apm-7.2.0-transaction": {
        "version": 1,
        "modified_date": "2019-05-28T15:55:26.791Z",
        "policy": {
            "phases": {
                "warm": {
                    "min_age": "31d",<1>
                    "actions": {
                        "readonly": {},
                        "set_priority": {
                            "priority": 50
                        }
                    }
                },
                "hot": {
                    "min_age": "0ms",
                    "actions": {
                        "rollover": {
                            "max_size": "50gb",<2>
                            "max_age": "7d"<3>
                        },
                        "set_priority": {
                            "priority": 100<4>
                        }
                    }
                }
            }
        }
    }
}
-----------------------
// CONSOLE
<1> Move to warm phase after _31 days_
<2> Rollover after _50gb_
<3> Rollover after _7 days_
<4> Priority for recovering your indices after a node restart. Higher priorities are recovered first.

Your indices are now configured to use index lifecycle management. Go ahead and <<setting-up-and-running,run APM Server>>.

[float]
=== ILM default policy upgrades

If you decide to customize the default ILM policy, any customizations will be overwritten when you upgrade APM Server.
Default policies are also subject to change in future releases

// Policies are versioned so they can change.
// Indices are versioned so they can change.
// An upgrade creates new templates, policies, and indices.
// If you customize anything, it will revert back to the default during an upgrade
