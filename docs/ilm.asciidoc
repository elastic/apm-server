[[ilm]]
[role="xpack"]
== Index lifecycle management (ILM)

The {ref}/getting-started-index-lifecycle-management.html[index lifecycle management (ILM)]
feature in {es} allows you to automate the management of your APM Server indices as they grow and age.

ILM is enabled for APM Server indices by default (v7.3+), and the <<ilm-default,default ILM policy>>
will be applied as long as all of the following conditions are true:

* `output.elasticsearch` is enabled. 
* The Elasticsearch instance supports ILM. 
* Custom `index` or `indices` settings are not configured. 

If you wish to define your own index lifecycle policies, see <<custom-ilm-configuration>>.

IMPORTANT: If you're migrating from an existing setup,
any indices present before ILM was configured will need to be managed manually.
// IS THIS STILL TRUE? Need to test
In addition, changes to the default index lifecycle policy do not take effect until the current index has rolled over.

[float]
[[ilm-default]]
=== Default policy

Index lifecycle management manages an index based on its defined policy.
The default ILM configuration applies *hot* and *warm* phase policies to all APM events:
`span`, `transaction`, `error`, and `metric`.
Cold and delete phases are not defined.

* *Hot* -- Rollover data when the index reaches a maximum size of 50gb or a maximum age of 30 days: `max_size: 50gb`, `max_age: 30d`, `priority: 100`
* *Warm* -- Move to warm phase after 30 days: `min_age: 30d`, `priority: 50`

[float]
[[custom-ilm-configuration]]
=== Custom configuration

* <<ilm-enable>>
* <<ilm-setup>>
* <<custom-ilm-policy>>
* <<example-ilm-config>>

[float]
[[ilm-enable]]
==== Enable ILM

ILM is enabled/disabled with `apm-server.ilm.enabled`:

[source,yml]
----
apm-server:
  ilm:
    enabled: "auto"
----

[float]
===== `ilm.enabled`

Can be `auto`, `true`, or `false`. Defaults to `auto` in v7.3+.

* *`"auto"`*
+
APM Server will enable ILM only if all three of the conditions below are true.
If any of the conditions are not met, ILM will be disabled.
+
** `output.elasticsearch` is enabled. 
** The Elasticsearch instance supports ILM. 
** Custom `index` or `indices` settings are not configured. 
// * `apm-server.ilm.setup.enabled: true`.

* *`true`*
+
APM Server will ignore any configured index settings and enable ILM if both of the conditions below are true.
If any of the conditions are not met, APM Server will disable ILM, create unmanaged indices, and an error will be logged.
+
** `output.elasticsearch` is enabled. 
** The Elasticsearch instance supports ILM. 
// * `apm-server.ilm.setup.enabled: true`.

* *`false`*
+
Explicitly disables ILM.

[float]
[[ilm-setup]]
==== Set up ILM

APM Server can handle all of the setup required for ILM:

[source,yml]
----
apm-server:
  ilm:
    setup:
      enabled: true
      overwrite: true
      require_policy: true
      templates:
        - event_type: "error"
          policy_name: "apm-rollover-30-days"
        - event_type: "span"
          policy_name: "apm-rollover-30-days"
        - event_type: "transaction"
          policy_name: "apm-rollover-30-days"
        - event_type: "metric"
          policy_name: "apm-rollover-30-days"
----

[float]
===== `apm-server.ilm.setup.enabled`

// Get rid of this
// In other words:

// [options="header"]
// |====
// |`apm-server.` `ilm.enabled` |create policy |overwrite policy |create template |overwrite template |create alias
// |`auto`/`true`  |true   |true   |true   |true   |true
// |`false`        |false  |false  |true   |true   |false
// |====

Can be `true` or `false`. Defaults to `true`.

* *`true`*
+
When `true`, APM Server will create an ILM specific template per event type.
This is required to map ILM aliases and policies to indices.
+
** If `apm-server.ilm.enabled: true`, APM Server will create aliases and ILM policies as well.
** If `apm-server.ilm.enabled: false`, APM Server will create only the templates. No lifecycle management policies or aliases will be created.
// What is the use case for the above scenario?? (`ilm.enabled: false` && `ilm.setup.enabled: true`)

* *`false`*
+
Disables ILM setup. No policies, templates, or aliases will be created by APM Server.
Only disable `ilm.setup` if you want to set up index management on your own.
If you simply want to disable ILM, use `apm-server.ilm.enabled: false` instead.

[float]
===== `apm-server.ilm.setup.overwrite`

// to do

[float]
===== `apm-server.ilm.setup.require_policy`

// to do

[float]
===== `apm-server.ilm.setup.templates`

// to do

[float]
[[custom-ilm-policy]]
==== Create a custom ILM policy

The default ILM policy can be viewed and edited in two places:

* In your `apm-server.yml` configuration file.
* On the *Index lifecycle policies* page in {kib} ({kibana-ref}/index-lifecycle-policies.html[more information]).

You can uncomment the default policy and edit to your desire.

Defining something incorrectly will cause APM Server to fail to connect to ES.

// Policy phases and actions
https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-policy-definition.html

// Actions available in each phase
https://www.elastic.co/guide/en/elasticsearch/reference/current/_actions.html

After starting up APM Server, you can confirm the policy was created using the GET lifecycle policy API:

[source,js]
-----------------------
GET _ilm/policy
-----------------------

[float]
[[example-ilm-config]]
==== Example ILM configuration

// needs more stuffs

[source,yml]
----
apm-server:
  ilm:
    enabled: "auto"
    setup:
      enabled: true
      policies:
        - name: "custom-apm-policy"
        policy:
          phases:
            hot:
              actions:
              rollover:
                max_size: "50gb"
                max_age: "30d"
              set_priority:
                priority: 100
            warm:
              min_age: "30d"
              actions:
              set_priority:
                priority: 50
              readonly: {}
            cold:
              min_age: "60d"
              actions:
              set_priority:
                priority: 0
              freeze: {}
            delete:
              min_age: "90d"
              actions:
              delete: {}
----



// >>>>>>>>>>>>>>>>>>>>>>>>>>>
//      TO DO BELOW HERE
// <<<<<<<<<<<<<<<<<<<<<<<<<<<

// NOTES
*Policies*
* Index lifecycle management will manage an index based on its defined policy
* Policies only need to be created once, and will persist through version upgrades.

*Templates*
* An index template associates policies with indices
* To use an index lifecycle policy, you need to specify it in the index template used to create the indices.

*Aliases*
* When a rollover action is is defined in a policy, you need to define an alias. This specifies which alias to rollover on behalf of the index

// END NOTES

[float]
[[ilm-settings]]
=== ILM settings

// stuff






[float]
// [[ilm-setup]]
=== ILM default policy setup

It is recommended to set up index lifecycle management (ILM) before starting APM Server.
This excludes setup from the ingestion process, which allows you to ensure ILM is set up correctly before using APM.

Run the <<setup-command>> with the ` --index-management` flag to set up the default ILM policy:

[source,js]
-----------------------
./apm-server setup --index-management
-----------------------
// CONSOLE

You can confirm the policy was created with the GET lifecycle policy API.
Here's what the transaction response looks like:

[source,js]
-----------------------
GET _ilm/policy
{
    "apm-7.2.0-transaction": {
        "version": 1,
        "modified_date": "2019-05-28T15:55:26.791Z",
        "policy": {
            "phases": {
                "warm": {
                    "min_age": "31d",<1>
                    "actions": {
                        "readonly": {},
                        "set_priority": {
                            "priority": 50
                        }
                    }
                },
                "hot": {
                    "min_age": "0ms",
                    "actions": {
                        "rollover": {
                            "max_size": "50gb",<2>
                            "max_age": "7d"<3>
                        },
                        "set_priority": {
                            "priority": 100<4>
                        }
                    }
                }
            }
        }
    }
}
-----------------------
// CONSOLE
<1> Move to warm phase after _31 days_
<2> Rollover after _50gb_
<3> Rollover after _7 days_
<4> Priority for recovering your indices after a node restart. Higher priorities are recovered first.

Your indices are now configured to use index lifecycle management. Go ahead and <<setting-up-and-running,run APM Server>>.

[float]
=== ILM default policy upgrades

If you decide to customize the default ILM policy, any customizations will be overwritten when you upgrade APM Server.
Default policies are also subject to change in future releases

// Policies are versioned so they can change.
// Indices are versioned so they can change.
// An upgrade creates new templates, policies, and indices.
// If you customize anything, it will revert back to the default during an upgrade
