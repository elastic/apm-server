[role="xpack"]
[[feature-roles]]
== Grant users access to secured resources

You can use role-based access control to grant users access to secured
resources. The roles that you set up depend on your organization's security
requirements and the minimum privileges required to use specific features.

Typically, you need to create the following separate roles:

* <<privileges-to-setup-beats,Setup role>>: To set up index templates and
other dependencies.
* <<privileges-to-publish-events,Writer role>>: To publish events collected by {beatname_uc}.
* <<privileges-to-publish-monitoring,Monitoring role>>: One for sending monitoring
information, and another for viewing it.
* <<privileges-api-key,API key role>>: To create and manage API keys.
* <<privileges-agent-central-config,Central configuration management role>>: To view
APM Agent central configurations.

{es-security-features} provides {ref}/built-in-roles.html[built-in roles] that grant a
subset of the privileges needed by APM users.
When possible, assign users the built-in roles to minimize the affect of future changes on your security strategy.
If no built-in role is available, you can assign users the privileges needed to accomplish a specific task.
In general, there are three types of privileges you'll work with:

* **Elasticsearch cluster privileges**: Manage the actions a user can perform against your cluster.
* **Elasticsearch index privileges**: Control access to the data in specific indices your cluster.
* **Kibana space privileges**: Grant users write or read access to features and apps within Kibana.

////
***********************************  ***********************************
***********************************  ***********************************
////

[[privileges-to-setup-beats]]
=== Grant privileges and roles needed for setup

++++
<titleabbrev>Create a _setup_ user</titleabbrev>
++++

IMPORTANT: Setting up {beatname_uc} is an admin-level task that requires extra
privileges. As a best practice, grant the setup role to administrators only, and
use a more restrictive role for event publishing.

Administrators who set up {beatname_uc} typically need to load the index template,
set up ILM aliases, templates, and policies, and register ingest pipelines.

To grant users the required privileges for setup:

. Create a *setup role*, called something like +{beat_default_index_prefix}_setup+, that has
the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Cluster
|`manage_ilm`
|All index lifecycle management operations related to managing policies

|Index
|`manage` on +{beat_default_index_prefix}-*+ indices
|All index administration privileges
|====

. Assign the *setup role*, along with the following built-in roles, to users who
need to set up {beatname_uc}:
+
[options="header"]
|====
|Role | Purpose

|`ingest_admin`
|Set up index templates and ingest pipelines
|====

NOTE: These instructions assume that you are using the default name for
{beatname_uc} indices (+{beat_default_index_prefix}-*+).
If you are using a custom index name, modify the privileges to
match your index naming pattern.

[float]
==== Partial setup

In some instances, you may want to create a less-privileged user for a specific setup task.

[float]
===== Set up index templates

APM Server loads an index template to Elasticsearch at setup time.
The following privileges are required for this task:

[options="header"]
|====
|Type | Privilege | Purpose

|Cluster
|`manage_index_template`
|All operations on index templates
|====

See <<configuration-template>> for more information.

[float]
===== Set up ILM

Index lifecycle management (ILM) allows you to automate the lifecycle of your APM Server indices as they grow and age.
To set up and configure ILM, the following privileges are required:

[options="header"]
|====
|Type | Privilege | Purpose

|Cluster
|`manage_index_template`
|All operations on index templates

|Cluster
|`manage_ilm`
|All index lifecycle management operations related to managing policies.

|Index
|`manage` on +{beat_default_index_prefix}-*+ indices
|All index administration privileges
|====

See <<ilm-reference>> for more information.

[float]
===== Set up ingest pipelines

Ingest pipelines allow you to pre-process documents in Elasticsearch before indexing them.
The following privileges are required to manage pipelines:

[options="header"]
|====
|Type | Privilege | Purpose

|Cluster
|`manage_pipeline`
|All operations on ingest pipelines
|====

See <<pipeline-option-es>> for more information.

////
***********************************  ***********************************
***********************************  ***********************************
////

[[privileges-to-publish-events]]
=== Grant privileges and roles needed for writing events

++++
<titleabbrev>Create a _writer_ user</titleabbrev>
++++

IMPORTANT: To minimize the privileges required by the writer role,
use the <<privileges-to-setup-beats,setup role>> to pre-load dependencies.
This section assumes that you've done that.

{beatname_uc} users that publish events to {es} need to create and write to +{beat_default_index_prefix}-*+
indices, upload and read sourcemaps, read API keys from Elasticsearch, and perform self-instrumentation.

[float]
==== General writer role

To grant an APM Server user the required privileges for writing events to {es}:

. Create a *general writer role*, called something like +{beat_default_index_prefix}_writer+,
that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`create_doc` on +{beat_default_index_prefix}-*+ indices
|Write events into {es}

|Index
|`create_index` on +{beat_default_index_prefix}-*+ indices
|Create APM indices in {es}
|====

. If <<configuration-rum,real user monitoring>> and <<sourcemaps,sourcemaps>> are enabled,
assign the following additional privileges to the *general writer role*:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`read` on +{beat_default_index_prefix}-*sourcemap+ indices
|Read sourcemaps from {es}
|====

. Assign the *general writer role* to users who need to publish {beatname_uc} data.

[float]
==== Specific writer roles

Instead of creating a *general writer role*,
individual publishing tasks, like writing events or uploading sourcemaps,
can be performed by dedicated users with stricter privileges.

[float]
===== Sourcemap writer role

To create an {beatname_uc} user that can write sourcemaps to {es}:

. Create a *sourcemap writer role*, called something like +{beat_default_index_prefix}_sourcemap+,
that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`create_doc` on +{beat_default_index_prefix}-*+ indices
|Write APM events into {es}

|Index
|`create_index` on +{beat_default_index_prefix}-*+ indices
|Create APM indices in {es}
|====

. Assign the *sourcemap writer role* to users who need to publish sourcemaps.

////
***********************************  ***********************************
***********************************  ***********************************
////

[[privileges-to-publish-monitoring]]
=== Grant privileges and roles needed for monitoring

++++
<titleabbrev>Create a _monitoring_ user</titleabbrev>
++++

{es-security-features} provides built-in users and roles for publishing and viewing monitoring data.
The privileges and roles needed to publish monitoring data
depend on the method used to collect that data.

* <<privileges-to-publish-monitoring-write>>
** <<privileges-to-publish-monitoring-internal>>
** <<privileges-to-publish-monitoring-metricbeat>>
* <<privileges-to-publish-monitoring-view>>

[float]
[[privileges-to-publish-monitoring-write]]
==== Publish monitoring data

[IMPORTANT]
====
**{ecloud} users:** This section does not apply to our
https://www.elastic.co/cloud/elasticsearch-service[hosted {ess}].
Monitoring on {ecloud} is enabled by clicking the *Enable* button in the *Monitoring* panel.
====

[float]
[[privileges-to-publish-monitoring-internal]]
===== Internal collection

If you're using <<monitoring-internal-collection,internal collection>> to
collect metrics about {beatname_uc}, {security-features} provides
the +{beat_monitoring_user}+ {ref}/built-in-users.html[built-in user] and
+{beat_monitoring_user}+ {ref}/built-in-roles.html[built-in role] to send
monitoring information. You can use the built-in user, if it's available in your
environment, or create a user who has the the built-in role assigned,
or create a user and manually assign the privileges needed to send monitoring
information.

If you use the built-in +{beat_monitoring_user}+ user,
make sure you set the password before using it.

If you don't use the +{beat_monitoring_user}+ user:

--
. Create a *monitoring role*, called something like
+{beat_default_index_prefix}_monitoring_writer+, that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

|Index
|`create_index` on `.monitoring-beats-*` indices
|Create monitoring indices in {es}

|Index
|`create_doc` on `.monitoring-beats-*` indices
|Write monitoring events into {es}
|====
+
. Assign the *monitoring role* to users who need to write monitoring data to {es}.
--

[float]
[[privileges-to-publish-monitoring-metricbeat]]
===== Metricbeat collection

NOTE: When using Metricbeat to collect metrics,
no roles or users need to be created with APM Server.
See <<monitoring-metricbeat-collection>>
for complete details on setting up Metricbeat collection.

If you're <<monitoring-metricbeat-collection,using {metricbeat}>> to collect
metrics about {beatname_uc}, {security-features} provides the `remote_monitoring_user`
{ref}/built-in-users.html[built-in user], and the `remote_monitoring_collector`
and `remote_monitoring_agent` {ref}/built-in-roles.html[built-in roles] for
collecting and sending monitoring information. You can use the built-in user, if
it's available in your environment, or create a user who has the privileges
needed to collect and send monitoring information.

If you use the built-in `remote_monitoring_user` user,
make sure you set the password before using it.

If you don't use the `remote_monitoring_user` user:

--
. Create a *monitoring user* on the production cluster who will collect and send monitoring
information. Assign the following roles to the *monitoring user*:
+
[options="header"]
|====
|Role | Purpose

|`remote_monitoring_collector`
|Collect monitoring metrics from {beatname_uc}

|`remote_monitoring_agent`
|Send monitoring data to the monitoring cluster
|====
--

[float]
[[privileges-to-publish-monitoring-view]]
==== View monitoring data

To grant users the required privileges for viewing monitoring data:

. Create a *monitoring role*, called something like
+{beat_default_index_prefix}_monitoring_viewer+, that has the following privileges:
+
[options="header"]
|====
|Type | Privilege | Purpose

| Spaces
|`Read` on Stack monitoring
|Read-only access to the Stack Monitoring feature in {kib}.

| Spaces
|`Read` on Dashboards
|Read-only access to the Dashboards feature in {kib}.
|====
+
. Assign the *monitoring role*, along with the following built-in roles, to users who
need to view monitoring data for {beatname_uc}:
+
[options="header"]
|====
|Role | Purpose

|`monitoring_user`
|Grants access to monitoring indices for {beatname_uc}
|====

////
***********************************  ***********************************
***********************************  ***********************************
////

[[privileges-api-key]]
=== Grant privileges and roles needed for API key management

++++
<titleabbrev>Create an _API key_ user</titleabbrev>
++++

You can configure <<api-key,API keys>> to authorize requests to APM Server.
To create an APM Server user with the required privileges for creating and managing API keys:

. Create an **API key role**, called something like `apm_api_key`,
that has the following `cluster` level privileges:
+
[options="header"]
|====
| Privilege | Purpose

|`manage_api_key`
|Allow {beatname_uc} to create, retrieve, and invalidate API keys
|====

. Depending on what the **API key role** will be used for,
also assign any or all of the following `apm` application level privileges:
+
* To **receive Agent configuration**, assign `config_agent:read`.
* To **ingest agent data**, assign `event:write`.
* To **upload sourcemaps**, assign `sourcemap:write`.

. Assign the **API key role** role to users that need to create and manage API keys.

[float]
[[privileges-api-key-example]]
=== Example API key role

The following example assigns the required cluster privileges,
and all three `apm` API key application privileges to a role named `apm_api_key`:

[source,kibana]
----
PUT _security/role/apm_api_key <1>
{
  "cluster": [
    "manage_api_key" <2>
  ],
  "applications": [
    {
      "application": "apm",
      "privileges": [
        "sourcemap:write", <3>
        "event:write", <4>
        "config_agent:read" <5>
      ],
      "resources": [
        "*"
      ]
    }
  ]
}
----
<1> `apm_api_key` is the name of the role we're assigning these privileges to. Any name can be used.
<2> Required cluster privileges.
<3> Required for API keys that will be used in sourcemap uploads.
<4> Required for API keys that will be used to ingest agent events.
<5> Required for API keys that will be used for Agent configuration.


////
***********************************  ***********************************
***********************************  ***********************************
////

[[privileges-agent-central-config]]
=== Grant privileges and roles needed for APM Agent central configuration

++++
<titleabbrev>Create a _central config_ user</titleabbrev>
++++

[[privileges-agent-central-config-server]]
==== APM Server central configuration management

APM Server acts as a proxy between your APM agents and the APM app.
The APM app communicates any changed settings to APM Server so that your agents only need to poll the Server
to determine which central configuration settings have changed.

To grant an APM Server user with the required privileges for managing central configuration,
assign the user the following privileges:

[options="header"]
|====
|Type | Privilege | Purpose

| Spaces
|`Read` on {beat_kib_app}
|Allow {beatname_uc} to manage central configurations via the {beat_kib_app}
|====

TIP: Looking for privileges and roles needed use central configuration from the APM app or APM app API?
See {kibana-ref}/apm-app-central-config-user.html[APM app central configuration user].

////
***********************************  ***********************************
***********************************  ***********************************
////

// [[privileges-create-api-keys]]
// === Grant privileges and roles needed to create APM Server API keys

// ++++
// <titleabbrev>Create an _APM API key_ user</titleabbrev>
// ++++

// CONTENT

////
***********************************  ***********************************
***********************************  ***********************************
////

[[more-security-roles]]
=== Additional APM users and roles

In addition to the {beatname_uc} users described in this documentation,
you'll likely need to create users for other APM tasks:

* An {kibana-ref}/apm-app-reader.html[APM reader], for {kib} users who need to view the APM app,
or create and edit visualizations that access +{beat_default_index_prefix}-*+ data.
* Various {kibana-ref}/apm-app-api-user.html[APM app API users],
for interacting with the APIs exposed by the APM app.

[float]
[[learn-more-security]]
=== Learn more about users and roles

Want to learn more about creating users and roles? See
{ref}/secure-cluster.html[Secure a cluster]. Also see:

* {ref}/security-privileges.html[Security privileges] for a description of
available privileges
* {ref}/built-in-roles.html[Built-in roles] for a description of roles that
you can assign to users
