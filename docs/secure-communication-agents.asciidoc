[[secure-communication-agents]]
=== Secure communication with APM Agents

To secure the communication between APM Agents and the APM Server,
you can use a *Secret token* in combination with SSL/TLS.

Example output config with secure communication enabled:

[source,yaml]
----
apm-server.secret_token: <secret-token>
apm-server.ssl.key: "/etc/pki/key.pem"
output.elasticsearch.ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
apm-server.ssl.certificate: "/etc/pki/client.pem"
----

[[secret-token]]
[float]
==== Secret token

You can configure a secret token to authorize requests to the APM Server,
and ensure that only your agents are able to send data to your APM servers.

Both the agents and the APM servers have to be configured with the same secret token.
In addition, *secret tokens only provide security when used in combination with SSL/TLS*.

Here's how you set the secret token in APM Server:

[source,yaml]
----
apm-server.secret_token: <secret-token>
----

We recommend saving the token in the APM Server <<keystore>>.

IMPORTANT: Secret tokens are not applicable for the RUM Agent,
as there is no way to prevent them from being publicly exposed.

[float]
===== Agent specific configuration

* *Go Agent*: {apm-go-ref-v}/configuration.html#config-secret-token
* *Java Agent*: {apm-java-ref-v}/config-reporter.html#config-secret-token
* *.NET Agent*: {apm-dotnet-ref-v}/config-reporter.html#config-secret-token
* *Node.js Agent*: {apm-node-ref-v}/configuration.html#secret-token[Secret Token]
* *Python Agent*: {apm-python-ref-v}/configuration.html#config-secret-token
* *Ruby Agent*: {apm-ruby-ref-v}/configuration.html#config-secret-token

[[ssl-setup]]
[float]
==== SSL/TLS communication

. Enable SSL/TLS in APM Server
. Enable HTTPS in your APM Agents

To enable SSL/TLS, you need a private key and a certificate issued by a certification authority (CA).
You can then specify the path to those files in your configuration properties:
`apm-server.ssl.key` and `apm-server.ssl.certificate` respectively.
This will make the APM Server serve HTTPS requests instead of HTTP.

[source,yaml]
----
apm-server.ssl.key: "/etc/pki/key.pem"
apm-server.ssl.certificate: "/etc/pki/client.pem"
----

To enable secure communication in your Agents, you simply need to update the configured server URL to use HTTPS instead of HTTP.

* *Go Agent*: {apm-go-ref-v}/configuration.html#config-server-url
* *Java Agent*: {apm-java-ref-v}/config-reporter.html#config-server-urls
* *.NET Agent*: {apm-dotnet-ref-v}/config-reporter.html#config-server-urls
* *Node.js Agent*: {apm-node-ref-v}/configuration.html#server-url
* *Python Agent*: {apm-python-ref-v}/configuration.html#config-server-url
* *Ruby Agent*: {apm-ruby-ref-v}/configuration.html#config-server-url

Some Agents also allow you to specify a custom certificate authority for connecting to APM Server:

* *Go Agent*: {apm-go-ref-v}/configuration.html#config-server-cert
// * *.NET Agent*: {apm-dotnet-ref-v}/
* *Python Agent*: {apm-python-ref-v}/configuration.html#config-server-cert
* *Ruby Agent*: {apm-ruby-ref-v}/configuration.html#config-ssl-ca-cert

Agents that don't allow you specify a custom certificate will allow you to
disable verification of the SSL certificate:

* *Java Agent*: {apm-java-ref-v}/config-reporter.html#config-verify-server-cert
* *Node.js Agent*: {apm-node-ref-v}/configuration.html#validate-server-cert

[float]
===== SSL/TLS configuration