[[frontend]]
== Frontend support

NOTE: Frontend support is an experimental feature not intended for production usage at the moment. 

This section describes features specifically designed to support frontend application monitoring
and a guide on how to enable experimental frontend support. 

[[frontend-enable]]
[float]
=== Enable Frontend Support
To try out experimental frontend support, set the `apm-server.frontend.enabled` to `true`.
See https://github.com/elastic/apm-server/blob/{doc-branch}/apm-server.reference.yml[`apm-server.reference.yml`] for more configuration options.

[[sourcemap]]
=== Source Maps
It is common practice to minify client-side JavaScript code for several reasons, e.g. performance gain. 
This can make debugging very difficult, as it is hard to read the minified files.
Source mapping can help for debugging minfied JavaScript files, 
by mapping code from the minified files to the original source code. 

APM Server has a source map <<sourcemap-endpoint,upload endpoint>> 
which accepts source maps complying to the 
https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k[Source map revision 3 proposal].

Uploaded source maps are used to map `stack trace` information from recorded `transaction` and `error` documents 
to the original source code files for easier debugging.  

[[sourcemap-apply]]
[float]
==== How source maps are applied

When source maps have been <<sourcemap-endpoint,uploaded>> and <<frontend-enable,frontend support is enabled>>, 
source mapping is automatically applied to the `stack trace frames` of all `errors` and `transactions` 
recorded with the https://github.com/elastic/apm-agent-js-base[JavaScript frontend agent].

The server tries to find an uploaded source map for every `stack trace frame` of the record.
The following information is used to find the previously uploaded source map entry:

* the record's `service.name` is matched against the source map's `service_name`
* the record's `service.version` is matched against the source map's `service_version`
* the stack trace frame's `abs_path` is matched against the source map's `bundle_filepath`

If multiple source maps with the same meta information are found, 
the source map with the latest upload timestamp is used. 

In case a matching source map is found and the source map can be applied to the `stack trace frame`, 
the frame's information is updated with the mapped information before the record is indexed.
The following information is changed to reflect the original source code file, when source mapping is applied:

* `filename`
* `function`
* `line number`
* `column number`
* `abs path`: is https://golang.org/pkg/path/#Clean[cleaned] to be the shortest path name equivalent to the given path name 

[[sourcemap-endpoint]]
[float]
==== Upload Endpoint 
To upload a source map you need to send a `HTTP POST` request
with `Content-Type` set to `multipart/form-data` to the APM Server source maps endpoint:

[source,bash]
------------------------------------------------------------
http(s)://{hostname}:{port}/v1/client-side/sourcemaps
------------------------------------------------------------

[[sourcemap-request-fields]]
[float]
===== Request Fields
The request consists of some meta information and the actual source map.
The meta information must contain the following fields:

* `service_name`
* `service_version`
* `bundle_filepath`: needs to be the absolute path of the final bundle as it is used in the web application

The meta information is used to identify a `source map` when source mapping is applied.

The actual source map must be attached to the request as a `file upload`
and it must match the specification for 
https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k[Source map revision 3 proposal].


[[sourcemap-api-examples]]
[float]
==== Example

Send an example source map to the APM Server:

["source","sh",subs="attributes"]
---------------------------------------------------------------------------
curl -X POST http://127.0.0.1:8200/v1/client-side/sourcemaps \
  -F service_name="test-service" 
  -F service_version="1.0" 
  -F bundle_filepath="/static/js/main.js.map" 
  -F sourcemap=@docs/data/intake-api/generated/sourcemap/bundle.js.map 
---------------------------------------------------------------------------

[[sourcemap-json-example]]
[float]
===== Source map json file
Example of an acceptable source map file:

[source,json]
----
include::./data/intake-api/generated/sourcemap/bundle.js.map[]
----
