[[jaeger-reference]]
== Configure Jaeger

++++
<titleabbrev>Jaeger</titleabbrev>
++++

// this content is reused in the how-to guides
// tag::jaeger-intro[]
experimental::["This feature is experimental and may be changed in a future release. It is not yet available on Elastic Cloud. For feature status on Elastic Cloud, see https://github.com/elastic/apm/issues/212[#212]."]

Elastic APM integrates with https://www.jaegertracing.io/[Jaeger], an open-source, distributed tracing system.
This integration allows users with an existing Jaeger setup to switch from the default Jaeger backend,
to ingesting data with Elastic's APM Server, storing data in {es}, and visualizing traces in the APM app.
Best of all, this can be done without any instrumentation changes in your application code.
// end::jaeger-intro[]

Ready to get started? See the <<jaeger,How to integrate with Jaeger>> guide.

[float]
[[jaeger-supported]]
=== Supported architecture

Jaeger architecture supports different data formats and transport protocols
that define how data can be sent to a collector. Elastic APM, as a Jaeger Collector, supports:

* Communication with *Jaeger Agents* via gRPC
+
The gRPC endpoint supports TLS. If the Jaeger gRPC collector service is enabled,
and `apm-server.ssl` is configured, SSL settings will automatically be applied to APM Server's Jaeger gRPC endpoint.
+
The gRPC endpoint supports probabilistic sampling.
APM Server automatically enables the sampling endpoint when `grpc.enabled` is set to `true`.
Sampling decisions can be configured <<jaeger-configure-sampling-central,centrally>>, with APM Agent configuration, or <<jaeger-configure-sampling-local,locally>>, in each Jaeger client.

* Communication with *Jaeger Clients* via thrift over HTTP
+
The Client HTTP endpoint does not support TLS or sampling.

TIP: See the https://www.jaegertracing.io/docs/1.14/architecture[Jaeger docs]
for more information on Jaeger architecture.

[float]
[[jaeger-caveats]]
=== Caveats

There are some limitations and differences between Elastic APM and Jaeger that you should be aware of.

*Jaeger integration limitations:*

* Because Jaeger has its own trace context header, and does not currently support W3C trace context headers,
it is not possible to mix and match the use of Elastic's APM Agents and Jaeger's Clients.
* Elastic APM only supports probabilistic sampling. Because of differences in the Jaeger and Elastic data structures,
sampling at a value below `1.0` (100%), will cause inaccuracies in the APM app. See <<jaeger-configure-sampling>> for more information.
* We currently only support exception logging. Span logs are not supported.

*Differences between APM Agents and Jaeger Clients:*

* Jaeger Clients only sends trace data.
APM Agents support a larger number of features, like
multiple types of metrics, and application breakdown charts.
When using Jaeger, features like this will not be available in the APM app.
* Elastic APM's {apm-overview-ref-v}/apm-data-model.html[data model] is different than Jaegers.
For Jaeger trace data to work with Elastic's data model, we rely on spans being tagged with the appropriate
https://github.com/opentracing/specification/blob/master/semantic_conventions.md[`span.kind`].
** Server Jaeger spans are mapped to Elastic APM {apm-overview-ref-v}/transactions.html[transactions].
** Client Jaeger spans are mapped to Elastic APM {apm-overview-ref-v}/transaction-spans.html[spans] -- unless the span is the root, in which case it is mapped to an Elastic APM {apm-overview-ref-v}/transactions.html[transaction].

[float]
[[jaeger-configuration]]
=== Configuration options

You can specify the following options in the `apm-server.jaeger.*` section of the
+{beatname_lc}.yml+ configuration file.

[float]
===== `grpc.enabled`
Set to true to enable the Jaeger gRPC collector service. Defaults to `false`.

[float]
===== `grpc.host`
Define the gRPC host and port the server is listening on.
Defaults to the standard Jaeger gRPC collector port `14250`.

[float]
===== `grpc.auth_tag`
Set to the name of the tag that should be used for authorizing Jaeger agents.
By default, authorization does not apply to Jaeger agents.

[float]
===== `http.enabled`
Set to true to enable the Jaeger HTTP collector endpoint. Defaults to `false`.

[float]
===== `http.host`
Define the HTTP host and port the server is listening on.
Defaults to the standard Jaeger HTTP collector port `14268`.
