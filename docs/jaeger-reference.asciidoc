[[jaeger-reference]]
== Configure Jaeger

++++
<titleabbrev>Jaeger</titleabbrev>
++++

experimental::[]

// this content is reused in the how-to guides
// tag::jaeger-intro[]
Elastic APM integrates with https://www.jaegertracing.io/[Jaeger], an open-source, distributed tracing system.
This integration allows users with an existing Jaeger setup to switch from the default Jaeger backend,
to the Elastic Stack -- transform data with APM Server, store data in {es}, and visualize traces in the Kibana APM app.
Best of all, no instrumentation changes are needed in your application code.
// end::jaeger-intro[]

Ready to get started? See the <<jaeger,How to integrate with Jaeger>> guide.

[float]
[[jaeger-supported]]
=== Supported architecture

Jaeger architecture supports different data formats and transport protocols
that define how data can be sent to a collector. Elastic APM, as a Jaeger collector,
supports communication with *Jaeger agents* via gRPC.

* APM Server serves Jaeger gRPC over the same <<host,host and port>> as the Elastic APM agent protocol.

* The APM Server gRPC endpoint supports TLS. If `apm-server.ssl` is configured,
SSL settings will automatically be applied to APM Server's Jaeger gRPC endpoint.

* The gRPC endpoint supports probabilistic sampling.
Sampling decisions can be configured <<jaeger-configure-sampling-central,centrally>> with APM Agent central configuration, or <<jaeger-configure-sampling-local,locally>> in each Jaeger client.

See the https://www.jaegertracing.io/docs/1.22/architecture[Jaeger docs]
for more information on Jaeger architecture.

[%collapsible]
.Communication with *Jaeger Clients* via thrift over HTTP (deprecated)
====
****

deprecated::[7.13.0, To be removed in 8.0.0]

If you've configured your Jaeger clients to send spans directly to collectors (bypassing Jaeger agents),
enable the APM Server HTTP endpoint by setting `apm-server.jaeger.http.enabled` to `true`.
Use `apm-server.jaeger.http.host` to change the default port.

* The Client HTTP endpoint does not support TLS or sampling,
and is not supported by our hosted {ess} on {ecloud}.

* If you're using an officially supported Jaeger Client library and want to connect directly to APM Server,
you need to update the `JAEGER_ENDPOINT` configuration property.
This is the HTTP endpoint the Client will send spans to.
The `host:port` set here should correspond to the value set in `apm-server.jaeger.http.host`.
See the relevant supported Jaeger library for more information.
+
** https://github.com/jaegertracing/jaeger-client-go[Go]
** https://github.com/jaegertracing/jaeger-client-java[Java]
** https://github.com/jaegertracing/jaeger-client-node[Node.js]
** https://github.com/jaegertracing/jaeger-client-python[Python]
** https://github.com/jaegertracing/jaeger-client-cpp[C++]
** https://github.com/jaegertracing/jaeger-client-csharp[C#]

****
====

[float]
[[jaeger-caveats]]
=== Caveats

There are some limitations and differences between Elastic APM and Jaeger that you should be aware of.

*Jaeger integration limitations:*

* Because Jaeger has its own trace context header, and does not currently support W3C trace context headers,
it is not possible to mix and match the use of Elastic's APM agents and Jaeger's clients.
* Elastic APM only supports probabilistic sampling.
* We currently only support exception logging. Span logs are not supported.

*Differences between APM Agents and Jaeger Clients:*

* Jaeger clients only sends trace data.
APM agents support a larger number of features, like
multiple types of metrics, and application breakdown charts.
When using Jaeger, features like this will not be available in the APM app.
* Elastic APM's {apm-overview-ref-v}/apm-data-model.html[data model] is different than Jaegers.
For Jaeger trace data to work with Elastic's data model, we rely on spans being tagged with the appropriate
https://github.com/opentracing/specification/blob/master/semantic_conventions.md[`span.kind`].
** Server Jaeger spans are mapped to Elastic APM {apm-overview-ref-v}/transactions.html[transactions].
** Client Jaeger spans are mapped to Elastic APM {apm-overview-ref-v}/transaction-spans.html[spans] -- unless the span is the root, in which case it is mapped to an Elastic APM {apm-overview-ref-v}/transactions.html[transaction].

[float]
[[jaeger-configuration]]
=== Configuration options

deprecated::[7.13.0, APM Server serves Jaeger gRPC over the same port as the Elastic APM agent protocol. The following configuration options have been deprecated, and will be removed in 8.0.0]

You can specify the following options in the `apm-server.jaeger.*` section of the
+{beatname_lc}.yml+ configuration file.

[float]
===== `grpc.enabled`
Set to true to enable the Jaeger gRPC collector service. Defaults to `false`.

[float]
===== `grpc.host`
Define the gRPC host and port the server is listening on.
Defaults to the standard Jaeger gRPC collector port `14250`.

[float]
===== `grpc.auth_tag`
Set to the name of the tag that should be used for authorizing Jaeger agents.
By default, authorization does not apply to Jaeger agents.

[float]
===== `http.enabled`
Set to true to enable the Jaeger HTTP collector endpoint. Defaults to `false`.

[float]
===== `http.host`
Define the HTTP host and port the server is listening on.
Defaults to the standard Jaeger HTTP collector port `14268`.
