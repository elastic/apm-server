---
name: Bump golang-version to latest version
pipelineid: 'updatecli-bump-golang'

actions:
  default:
    title: '[updatecli] Bump Golang version to {{ source "latestGoVersion" }}'
    kind: github/pullrequest
    scmid: default
    spec:
      labels:
        - automation
        - backport-skip
        - dependencies
      description: |-
        ### What
        Bump go release version with the latest release.

        ### Further details
        See [changelog](https://github.com/golang/go/issues?q=milestone%3AGo{{ source "latestGoVersion" }}+label%3ACherryPickApproved) for {{ source "latestGoVersion" }}

scms:
  default:
    kind: github
    spec:
      user: '{{ requiredEnv "GIT_USER" }}'
      email: '{{ requiredEnv "GIT_EMAIL" }}'
      owner: elastic
      repository: apm-server
      token: '{{ requiredEnv "GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "GIT_USER" }}'
      branch: main

sources:
  minor:
    name: Get minor version in .go-version
    kind: shell
    transformers:
      - findsubmatch:
          pattern: '^\d+.(\d+).\d+$'
          captureindex: 1
    spec:
      command: cat .go-version

  latestGoVersion:
    name: Get Latest Go Release
    kind: githubrelease
    dependson:
      - minor
    transformers:
      - trimprefix: go
    spec:
      owner: golang
      repository: go
      token: '{{ requiredEnv "GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "GIT_USER" }}'
      versionfilter:
        kind: regex
        pattern: go1\.{{ source "minor" }}\.\d*$

  gomod:
    dependson:
      - latestGoVersion
    name: Get version in go.mod format
    kind: shell
    transformers:
      - findsubmatch:
          pattern: '^(\d+.\d+).\d*'
          captureindex: 1
    spec:
      command: echo {{ source "latestGoVersion" }}

conditions:
  dockerTag:
    name: Is docker image golang:{{ source "latestGoVersion" }} published
    kind: dockerimage
    spec:
      image: golang
      tag: '{{ source "latestGoVersion" }}'
    sourceid: latestGoVersion

  goDefaultVersion-check:
    name: Check if defined golang version differs
    kind: shell
    sourceid: latestGoVersion
    spec:
      command: 'grep -v -q {{ source "latestGoVersion" }} .go-version #'

targets:
  update-go-version:
    name: 'Update .go-version with Golang version {{ source "latestGoVersion" }}'
    sourceid: latestGoVersion
    scmid: default
    kind: file
    spec:
      content: '{{ source "latestGoVersion" }}'
      file: .go-version
      matchpattern: '\d+.\d+.\d+'
  update-dockerfile:
    name: 'Update Dockerfile with Golang version {{ source "latestGoVersion" }}'
    sourceid: latestGoVersion
    scmid: default
    kind: file
    spec:
      file: packaging/docker/Dockerfile
      matchpattern: '(FROM golang):\d+.\d+.\d+'
      replacepattern: '$1:{{ source "latestGoVersion" }}'
  update-gomod:
    name: 'Update go.mod files with {{ source "gomod" }}'
    sourceid: gomod
    scmid: default
    kind: file
    spec:
      content: 'go {{ source "gomod" }}'
      files:
        - go.mod
        - cmd/intake-receiver/go.mod
        - internal/glog/go.mod
        - systemtest/go.mod
        - tools/go.mod
      matchpattern: 'go \d+.\d+'
