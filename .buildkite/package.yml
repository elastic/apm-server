notify:
  - slack: "#apm-server"
    if: build.state == "failed" && build.branch =~ /^(main|\d+\.\d+|\d+\.x)$$/
  - slack: "#observablt-bots"
    if: build.state == "failed" && build.branch =~ /^(main|\d+\.\d+|\d+\.x)$$/

env:
  IMAGE_UBUNTU_X86_64: "family/core-ubuntu-2004"
  IMAGE_UBUNTU_ARM_64: "core-ubuntu-2004-aarch64"
  BEAT_DOC_BRANCH: "7.x"

steps:
  - group: "Package"
    key: "package"
    steps:
      - label: "Package Ubuntu-20 x86_64"
        key: "package-x86-64"
        command: ".buildkite/scripts/package.sh {{matrix.type}}"
        env:
          # The PLATFORMS variable is used to determine which platforms to build for.
          # See https://github.com/elastic/beats/blob/a156701b0302ca0e4e8676d2de96ebf2c1b7879d/dev-tools/mage/platforms.go#L28
          # We need to be explicit about the platforms we are building for, as the default
          # is to build for all platforms. This is a workaround for the fact that the
          # default ARM platforms are not supported on AMD64 machines in the golang-crossbuild.
          PLATFORMS: "darwin/amd64 linux/386 linux/amd64 windows/386 windows/amd64"
        agents:
          provider: "gcp"
          image: "${IMAGE_UBUNTU_X86_64}"
          machineType: "c2-standard-16"
        matrix:
          setup:
            type:
            - "snapshot"
            - "staging"
        artifact_paths:
          - "build/distributions/**/*"
          - "build/dependencies*.csv"
        retry:
          automatic:
            - limit: 1

      - label: "Package Ubuntu-20 aarch64"
        key: "package-arm"
        command: ".buildkite/scripts/package.sh {{matrix.type}}"
        env:
          # The PLATFORMS variable is used to determine which platforms to build for.
          # See https://github.com/elastic/beats/blob/a156701b0302ca0e4e8676d2de96ebf2c1b7879d/dev-tools/mage/platforms.go#L28
          PLATFORMS: 'linux/arm64'
        agents:
          provider: "aws"
          imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
          instanceType: "t4g.2xlarge"
        matrix:
          setup:
            type:
            - "snapshot"
            - "staging"
        artifact_paths:
          - "build/distributions/**/*"
        retry:
          automatic:
            - limit: 1

  - label: "DRA"
    key: "dra"
    command: ".buildkite/scripts/dra.sh {{matrix}}"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
      machineType: "c2-standard-16"
    matrix:
      - "snapshot"
      - "staging"
    depends_on:
      - step: "package"
        allow_failure: false
