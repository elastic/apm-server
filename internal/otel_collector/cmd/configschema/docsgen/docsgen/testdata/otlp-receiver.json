{
  "Name": "",
  "Type": "*otlpreceiver.Config",
  "Kind": "",
  "Default": null,
  "Doc": "",
  "Fields": [
    {
      "Name": "protocols",
      "Type": "otlpreceiver.Protocols",
      "Kind": "struct",
      "Default": null,
      "Doc": "Protocols is the configuration for the supported protocols, currently gRPC and HTTP (Proto and JSON).\n",
      "Fields": [
        {
          "Name": "grpc",
          "Type": "*configgrpc.GRPCServerSettings",
          "Kind": "ptr",
          "Default": null,
          "Doc": "",
          "Fields": [
            {
              "Name": "endpoint",
              "Type": "",
              "Kind": "string",
              "Default": "0.0.0.0:4317",
              "Doc": "Endpoint configures the address for this network connection.\nFor TCP and UDP networks, the address has the form \"host:port\". The host must be a literal IP address,\nor a host name that can be resolved to IP addresses. The port must be a literal port number or a service name.\nIf the host is a literal IPv6 address it must be enclosed in square brackets, as in \"[2001:db8::1]:80\" or\n\"[fe80::1%zone]:80\". The zone specifies the scope of the literal IPv6 address as defined in RFC 4007.\n",
              "Fields": null
            },
            {
              "Name": "transport",
              "Type": "",
              "Kind": "string",
              "Default": "tcp",
              "Doc": "Transport to use. Known protocols are \"tcp\", \"tcp4\" (IPv4-only), \"tcp6\" (IPv6-only), \"udp\", \"udp4\" (IPv4-only),\n\"udp6\" (IPv6-only), \"ip\", \"ip4\" (IPv4-only), \"ip6\" (IPv6-only), \"unix\", \"unixgram\" and \"unixpacket\".\n",
              "Fields": null
            },
            {
              "Name": "tls_settings",
              "Type": "*configtls.TLSServerSetting",
              "Kind": "ptr",
              "Default": null,
              "Doc": "Configures the protocol to use TLS.\nThe default value is nil, which will cause the protocol to not use TLS.\n",
              "Fields": [
                {
                  "Name": "ca_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the CA cert. For a client this verifies the server certificate.\nFor a server this verifies client certificates. If empty uses system root CA.\n(optional)\n",
                  "Fields": null
                },
                {
                  "Name": "cert_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS cert to use for TLS required connections. (optional)\n",
                  "Fields": null
                },
                {
                  "Name": "key_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS key to use for TLS required connections. (optional)\n",
                  "Fields": null
                },
                {
                  "Name": "client_ca_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS cert to use by the server to verify a client certificate. (optional)\nThis sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to\nhttps://godoc.org/crypto/tls#Config for more information. (optional)\n",
                  "Fields": null
                }
              ]
            },
            {
              "Name": "max_recv_msg_size_mib",
              "Type": "",
              "Kind": "uint64",
              "Default": null,
              "Doc": "MaxRecvMsgSizeMiB sets the maximum size (in MiB) of messages accepted by the server.\n",
              "Fields": null
            },
            {
              "Name": "max_concurrent_streams",
              "Type": "",
              "Kind": "uint32",
              "Default": null,
              "Doc": "MaxConcurrentStreams sets the limit on the number of concurrent streams to each ServerTransport.\nIt has effect only for streaming RPCs.\n",
              "Fields": null
            },
            {
              "Name": "read_buffer_size",
              "Type": "",
              "Kind": "int",
              "Default": 524288,
              "Doc": "ReadBufferSize for gRPC server. See grpc.ReadBufferSize\n(https://godoc.org/google.golang.org/grpc#ReadBufferSize).\n",
              "Fields": null
            },
            {
              "Name": "write_buffer_size",
              "Type": "",
              "Kind": "int",
              "Default": null,
              "Doc": "WriteBufferSize for gRPC server. See grpc.WriteBufferSize\n(https://godoc.org/google.golang.org/grpc#WriteBufferSize).\n",
              "Fields": null
            },
            {
              "Name": "keepalive",
              "Type": "*configgrpc.KeepaliveServerConfig",
              "Kind": "ptr",
              "Default": null,
              "Doc": "Keepalive anchor for all the settings related to keepalive.\n",
              "Fields": [
                {
                  "Name": "server_parameters",
                  "Type": "*configgrpc.KeepaliveServerParameters",
                  "Kind": "ptr",
                  "Default": null,
                  "Doc": "",
                  "Fields": [
                    {
                      "Name": "max_connection_idle",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    },
                    {
                      "Name": "max_connection_age",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    },
                    {
                      "Name": "max_connection_age_grace",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    },
                    {
                      "Name": "time",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    },
                    {
                      "Name": "timeout",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    }
                  ]
                },
                {
                  "Name": "enforcement_policy",
                  "Type": "*configgrpc.KeepaliveEnforcementPolicy",
                  "Kind": "ptr",
                  "Default": null,
                  "Doc": "",
                  "Fields": [
                    {
                      "Name": "min_time",
                      "Type": "time.Duration",
                      "Kind": "int64",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    },
                    {
                      "Name": "permit_without_stream",
                      "Type": "",
                      "Kind": "bool",
                      "Default": null,
                      "Doc": "",
                      "Fields": null
                    }
                  ]
                }
              ]
            },
            {
              "Name": "auth",
              "Type": "*configauth.Authentication",
              "Kind": "ptr",
              "Default": null,
              "Doc": "Auth for this receiver\n",
              "Fields": [
                {
                  "Name": "attribute",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "The attribute (header name) to look for auth data. Optional, default value: \"authentication\".\n",
                  "Fields": null
                },
                {
                  "Name": "oidc",
                  "Type": "*configauth.OIDC",
                  "Kind": "ptr",
                  "Default": null,
                  "Doc": "OIDC configures this receiver to use the given OIDC provider as the backend for the authentication mechanism.\nRequired.\n",
                  "Fields": [
                    {
                      "Name": "issuer_url",
                      "Type": "",
                      "Kind": "string",
                      "Default": null,
                      "Doc": "IssuerURL is the base URL for the OIDC provider.\nRequired.\n",
                      "Fields": null
                    },
                    {
                      "Name": "audience",
                      "Type": "",
                      "Kind": "string",
                      "Default": null,
                      "Doc": "Audience of the token, used during the verification.\nFor example: \"https://accounts.google.com\" or \"https://login.salesforce.com\".\nRequired.\n",
                      "Fields": null
                    },
                    {
                      "Name": "issuer_ca_path",
                      "Type": "",
                      "Kind": "string",
                      "Default": null,
                      "Doc": "The local path for the issuer CA's TLS server cert.\nOptional.\n",
                      "Fields": null
                    },
                    {
                      "Name": "username_claim",
                      "Type": "",
                      "Kind": "string",
                      "Default": null,
                      "Doc": "The claim to use as the username, in case the token's 'sub' isn't the suitable source.\nOptional.\n",
                      "Fields": null
                    },
                    {
                      "Name": "groups_claim",
                      "Type": "",
                      "Kind": "string",
                      "Default": null,
                      "Doc": "The claim that holds the subject's group membership information.\nOptional.\n",
                      "Fields": null
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "Name": "http",
          "Type": "*confighttp.HTTPServerSettings",
          "Kind": "ptr",
          "Default": null,
          "Doc": "",
          "Fields": [
            {
              "Name": "endpoint",
              "Type": "",
              "Kind": "string",
              "Default": "0.0.0.0:55681",
              "Doc": "Endpoint configures the listening address for the server.\n",
              "Fields": null
            },
            {
              "Name": "tls_settings",
              "Type": "*configtls.TLSServerSetting",
              "Kind": "ptr",
              "Default": null,
              "Doc": "TLSSetting struct exposes TLS client configuration.\n",
              "Fields": [
                {
                  "Name": "ca_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the CA cert. For a client this verifies the server certificate.\nFor a server this verifies client certificates. If empty uses system root CA.\n(optional)\n",
                  "Fields": null
                },
                {
                  "Name": "cert_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS cert to use for TLS required connections. (optional)\n",
                  "Fields": null
                },
                {
                  "Name": "key_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS key to use for TLS required connections. (optional)\n",
                  "Fields": null
                },
                {
                  "Name": "client_ca_file",
                  "Type": "",
                  "Kind": "string",
                  "Default": null,
                  "Doc": "Path to the TLS cert to use by the server to verify a client certificate. (optional)\nThis sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to\nhttps://godoc.org/crypto/tls#Config for more information. (optional)\n",
                  "Fields": null
                }
              ]
            },
            {
              "Name": "cors_allowed_origins",
              "Type": "[]string",
              "Kind": "slice",
              "Default": null,
              "Doc": "CorsOrigins are the allowed CORS origins for HTTP/JSON requests to grpc-gateway adapter\nfor the OTLP receiver. See github.com/rs/cors\nAn empty list means that CORS is not enabled at all. A wildcard (*) can be\nused to match any origin or one or more characters of an origin.\n",
              "Fields": null
            },
            {
              "Name": "cors_allowed_headers",
              "Type": "[]string",
              "Kind": "slice",
              "Default": null,
              "Doc": "CorsHeaders are the allowed CORS headers for HTTP/JSON requests to grpc-gateway adapter\nfor the OTLP receiver. See github.com/rs/cors\nCORS needs to be enabled first by providing a non-empty list in CorsOrigins\nA wildcard (*) can be used to match any header.\n",
              "Fields": null
            }
          ]
        }
      ]
    }
  ]
}