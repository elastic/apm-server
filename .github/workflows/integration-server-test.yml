---
name: integration-server-test

on:
  workflow_dispatch: ~
  # TODO: re-enable this once they run reliably
  # TODO: re-enable notify step once enabling this
  # schedule:
  #   - cron: '0 3 * * 1-5'

permissions:
  contents: read
  id-token: write

env:
  TF_VAR_BRANCH: ${{ github.ref_name }}
  TF_VAR_BUILD_ID: ${{ github.run_id }}
  TF_VAR_ENVIRONMENT: 'ci'
  TF_VAR_REPO: ${{ github.repository }}
  TERRAFORM_VERSION: 1.10.2

jobs:
  run-upgrade:
    name: Upgrade tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - 'pro'
        upgrade-path:
          # Latest 8.15 cannot upgrade to latest 8.17, it can only go to 8.17.3.
          # With our current setup (only latest patch), we have to upgrade to intermediate latest 8.16 instead.
          # TODO: Maybe add support for upgrading to latest upgradable instead of absolute latest?
          - '8.15, 8.16, 8.17'
          - '8.17, 8.18, 9.0'
          - '8.17, 8.19, 9.1'
        scenario:
          - 'Default'
          - 'Reroute'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version-file: 'integrationservertest/go.mod'
          cache: false
      - uses: elastic/oblt-actions/google/auth@db0844c27572a45966ce669e4d3073c205c8d5e4 # v1
      - uses: google-github-actions/get-secretmanager-secrets@a8440875e1c2892062aef9061228d4f1af8f919b # v2.2.3
        with:
          export_to_environment: true
          secrets: |-
            EC_API_KEY:elastic-observability/elastic-cloud-observability-team-${{ matrix.environment }}-api-key
      - name: "Run upgrade tests"
        working-directory: ${{ github.workspace }}/integrationservertest
        run: |
          export TF_VAR_CREATED_DATE=$(date +%s)
          go test -run="TestUpgrade.*/.*/${{ matrix.scenario }}" -v -timeout=60m -target="${{ matrix.environment }}" -upgrade-path="${{ matrix.upgrade-path }}" ./

  run-standalone:
    name: Standalone-to-managed tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          - 'pro'
        scenario:
          - 'Managed7'
          - 'Managed8'
          - 'Managed9'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5
        with:
          go-version-file: 'integrationservertest/go.mod'
          cache: false
      - uses: elastic/oblt-actions/google/auth@db0844c27572a45966ce669e4d3073c205c8d5e4 # v1
      - uses: google-github-actions/get-secretmanager-secrets@a8440875e1c2892062aef9061228d4f1af8f919b # v2.2.3
        with:
          export_to_environment: true
          secrets: |-
            EC_API_KEY:elastic-observability/elastic-cloud-observability-team-${{ matrix.environment }}-api-key
      - name: "Run standalone-to-managed tests"
        working-directory: ${{ github.workspace }}/integrationservertest
        run: |
          export TF_VAR_CREATED_DATE=$(date +%s)
          go test -run="TestStandaloneManaged.*/${{ matrix.scenario }}" -v -timeout=60m -target="${{ matrix.environment }}" ./

#  notify:
#    if: always()
#    runs-on: ubuntu-latest
#    needs:
#      - run
#    steps:
#      - id: check
#        uses: elastic/oblt-actions/check-dependent-jobs@v1
#        with:
#          jobs: ${{ toJSON(needs) }}
#      - uses: elastic/oblt-actions/slack/notify-result@v1
#        with:
#          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
#          channel-id: "#apm-server"
#          status: ${{ steps.check.outputs.status }}
