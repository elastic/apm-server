---
name: integration-server-test
run-name: Integration Server Test

on:
  workflow_dispatch:
    inputs:
      run-upgrade-tests:
        description: 'Run upgrade tests (SNAPSHOT)'
        required: false
        type: boolean
        default: true
      run-upgrade-bc-tests:
        description: 'Run upgrade tests (BC)'
        required: false
        type: boolean
        default: true
      run-standalone-tests:
        description: 'Run standalone-to-managed tests'
        required: false
        type: boolean
        default: true
  schedule:
    - cron: '0 2 * * 1-5'

permissions:
  contents: read
  id-token: write

env:
  TF_VAR_BRANCH: ${{ github.ref_name }}
  TF_VAR_BUILD_ID: ${{ github.run_id }}
  TF_VAR_ENVIRONMENT: 'ci'
  TF_VAR_REPO: ${{ github.repository }}
  TERRAFORM_VERSION: 1.10.2

jobs:
  prepare:
    name: Prepare tests
    runs-on: ubuntu-latest
    outputs:
      upgrade_paths: ${{ steps.generate.outputs.upgrade_paths }}
    steps:
      - uses: actions/checkout@v4
      - id: generate
        name: Generate BC upgrade paths
        uses: ./.github/workflows/generate-bc-upgrade-paths

  run-upgrade:
    if: ${{ !contains(inputs.run-upgrade-tests, 'false') }}
    name: Upgrade tests (SNAPSHOT)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        upgrade-path:
          - '8.15, 8.16, 8.17, 8.18'
          - '8.18, 8.19, 9.2'
          - '8.18, 9.0, 9.2'
          - '8.19, 9.1, 9.2'
        scenario:
          - 'Default'
          - 'Reroute'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'integrationservertest/go.mod'
          cache: false
      - uses: elastic/oblt-actions/google/auth@v1
      - uses: google-github-actions/get-secretmanager-secrets@50ec04d56ddf2740b0bde82926cc742f90e06d2b # v2.2.4
        with:
          export_to_environment: true
          secrets: |-
            EC_API_KEY:elastic-observability/elastic-cloud-observability-team-pro-api-key
      - name: "Run upgrade tests"
        working-directory: ${{ github.workspace }}
        run: |
          export TF_VAR_CREATED_DATE=$(date +%s)
          SCENARIO="${{ matrix.scenario }}" UPGRADE_PATH="${{ matrix.upgrade-path }}" SNAPSHOT=true make integration-server-test/upgrade

  run-upgrade-bc:
    if: ${{ !contains(inputs.run-upgrade-bc-tests, 'false') && needs.prepare.outputs.upgrade_paths != '[]' }}
    name: Upgrade tests (BC)
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        upgrade-path: ${{ fromJSON(needs.prepare.outputs.upgrade_paths) }}
        scenario:
          - 'Default'
          - 'Reroute'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'integrationservertest/go.mod'
          cache: false
      - uses: elastic/oblt-actions/google/auth@v1
      - uses: google-github-actions/get-secretmanager-secrets@50ec04d56ddf2740b0bde82926cc742f90e06d2b # v2.2.4
        with:
          export_to_environment: true
          secrets: |-
            EC_API_KEY:elastic-observability/elastic-cloud-observability-team-pro-api-key
      - name: "Run upgrade tests"
        working-directory: ${{ github.workspace }}
        run: |
          export TF_VAR_CREATED_DATE=$(date +%s)
          SCENARIO="${{ matrix.scenario }}" UPGRADE_PATH="${{ matrix.upgrade-path }}" make integration-server-test/upgrade

  run-standalone:
    if: ${{ !contains(inputs.run-standalone-tests, 'false') }}
    name: Standalone-to-managed tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        scenario:
          - 'Managed7'
          - 'Managed8'
          - 'Managed9'
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: "${{ env.TERRAFORM_VERSION }}"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'integrationservertest/go.mod'
          cache: false
      - uses: elastic/oblt-actions/google/auth@v1
      - uses: google-github-actions/get-secretmanager-secrets@50ec04d56ddf2740b0bde82926cc742f90e06d2b # v2.2.4
        with:
          export_to_environment: true
          secrets: |-
            EC_API_KEY:elastic-observability/elastic-cloud-observability-team-pro-api-key
      - name: "Run standalone-to-managed tests"
        working-directory: ${{ github.workspace }}
        run: |
          export TF_VAR_CREATED_DATE=$(date +%s)
          SCENARIO="${{ matrix.scenario }}" make integration-server-test/standalone

  notify:
    name: Notify
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - run-upgrade
      - run-upgrade-bc
      - run-standalone
    steps:
      - id: check
        uses: elastic/oblt-actions/check-dependent-jobs@v1
        with:
          jobs: ${{ toJSON(needs) }}
      - uses: elastic/oblt-actions/slack/notify-result@v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "#apm-server"
          status: ${{ steps.check.outputs.status }}
