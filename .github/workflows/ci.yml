name: ci

on:
  push:
    branches:
      - 7.1*
  pull_request:
  merge_group:

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
          cache-dependency-path: |
            go.sum
            tools/go.sum
            systemtest/go.sum
      - run: make check-full

  test:
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest', 'ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
      - env:
          CGO_ENABLED: "0"
        run: go test -v ./...

  python-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # As long as there are some disk space issues with the CI runners.
      - name: Free Disk Space
        continue-on-error: true
        uses: jlumbroso/free-disk-space@f68fdb76e2ea636224182cfb7377ff9a1708f9b8
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          tool-cache: false
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
      - run: make update apm-server docker-system-tests

  go-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
      - run: make apm-server
      - run: cd systemtest && go test -v -timeout=20m ./...

  system-test:
    runs-on: ubuntu-latest
    needs:
      - python-system-tests
      - go-system-tests
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
<<<<<<< HEAD
          needs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.isSuccess }}
=======
          go-version-file: systemtest/go.mod
          cache: true
      - run: docker-compose up -d
      - env:
          GOTESTFLAGS: "-v -json"
          OUTPUT_JSON_FILE: "build/TEST-go-system_tests.out.json"
          OUTPUT_JUNIT_FILE: "build/TEST-go-system_tests.xml"
          GH_TOKEN: ${{ github.token }}
        run: |
          go run -modfile=tools/go.mod gotest.tools/gotestsum \
          --no-color -f standard-quiet --jsonfile "$OUTPUT_JSON_FILE" --junitfile "$OUTPUT_JUNIT_FILE" \
          --raw-command -- make system-test
      - uses: actions/upload-artifact@v4  # upload test results
        if: ${{ always() }} # run this step even if previous step failed
        with:
          name: test-results
          path: 'build/*.xml'

  test-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - run: make package-snapshot
        env:
          GH_TOKEN: ${{ github.token }}

  test-package-and-push:
    runs-on: ubuntu-latest
    # If no PR event or if a PR event that's caused by a non-fork and non dependabot actor
    if: github.event_name != 'pull_request' || ( github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false && github.actor != 'dependabot[bot]' )
    env:
      GENERATE_WOLFI_IMAGES: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Log in to the Elastic Container registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}
      - run: make package-snapshot
        env:
          GH_TOKEN: ${{ github.token }}
      - run: make publish-docker-images
>>>>>>> 5fc2102c4 (ci: set GH_TOKEN to remove warnings (#13369))
