name: ci

on:
  push:
    branches:
      - 7.1*
  pull_request:
  merge_group:

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
          cache-dependency-path: |
            go.sum
            tools/go.sum
            systemtest/go.sum
      - run: make check-full

  test:
    strategy:
      matrix:
        os: ['macos-latest', 'windows-latest', 'ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
=======
      - uses: actions/checkout@v4
      - uses: antontroshin/setup-go@bda02de8887c9946189f81e7e59512914aeb9ea4
        if: runner.os == 'Windows'
        with:
          go-version-file: go.mod
          cache: true
      - uses: actions/setup-go@v5
        if: runner.os != 'Windows'
>>>>>>> 211ccc86 (ci: switch to custom setup-go action in windows (#15623))
        with:
          go-version-file: .go-version
          cache: true
      - env:
          CGO_ENABLED: "0"
        run: go test -v ./...

  python-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # As long as there are some disk space issues with the CI runners.
      - name: Free Disk Space
        continue-on-error: true
        uses: jlumbroso/free-disk-space@f68fdb76e2ea636224182cfb7377ff9a1708f9b8
        with:
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
          tool-cache: false
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
      - run: make update apm-server docker-system-tests

  go-system-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: .go-version
          cache: true
      - run: make apm-server
      - run: cd systemtest && go test -v -timeout=20m ./...

  system-test:
    runs-on: ubuntu-latest
    needs:
      - python-system-tests
      - go-system-tests
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.isSuccess }}
