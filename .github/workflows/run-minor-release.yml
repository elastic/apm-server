---
name: run-minor-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version (semver format: major.minor.patch)'
        required: true
        type: string

permissions:
  contents: read

env:
  SLACK_CHANNEL: "#apm-server-test-release"
  
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      release-branch: ${{ steps.generate.outputs.release-branch }}
      release-version: ${{ steps.generate.outputs.release-version }}
    steps:
      - id: generate
        run: |-
          echo "release-branch=${VERSION%.*}" >> "${GITHUB_OUTPUT}"
          echo "release-version=${VERSION}" >> "${GITHUB_OUTPUT}"
        env:
          VERSION: ${{ inputs.version }}

  run-minor:
    runs-on: ubuntu-latest
    needs: [ prepare ]
    env:
      RELEASE_BRANCH: ${{ needs.prepare.outputs.release-branch }}
      RELEASE_VERSION: ${{ needs.prepare.outputs.release-version }}
    steps:
      - uses: actions/checkout@v4

      - uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: |-
            :wave:
              Feature freeze for `apm-server@{{ env.RELEASE_VERSION }}` just started.
              And `apm-server@{{ env.RELEASE_BRANCH }}` will be created today.

      - run: make minor-release

      - uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          channel: ${{ env.SLACK_CHANNEL }}
          message: |-
            :wave:
              `apm-server@{{ env.RELEASE_BRANCH }}` is available.
              And the docs and other references are updated. You can start using it.
