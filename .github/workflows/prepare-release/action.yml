---
name: prepare-release
description: Common tasks for preparing minor and patch releases

inputs:
  type:
    description: 'Release type (minor or patch)'
    required: true
  version:
    description: 'The version'
    required: true
  vault-url:
    description: 'Vault URL'
    required: true
  vault-role-id:
    description: 'Vault role ID'
    required: true
  vault-secret-id:
    description: 'Vault secret ID'
    required: true

outputs:
  release-branch:
    description: "Release branch (relevant for minor releases)"
    value: ${{ steps.generate.outputs.release-branch }}
  release-version:
    description: "Release version"
    value: ${{ steps.generate.outputs.release-version }}
  slack-thread:
    description: "Slack thread id"
    value: ${{ steps.slack-thread.outputs.threadTimestamp }}

runs:
  using: "composite"
  steps:
    - name: Send slack message when started
      id: slack-thread
      uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}
        channel: "#apm-server-test-release"
        message: ":wave: This is the thread for the ${{ inputs.type }} release `${{ github.repository }}@${{ env.VERSION }}`. (<${{ env.JOB_URL }}|workflow run>)"
      env:
        VERSION: ${{ inputs.version }}
        JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    - id: generate
      run: |-
        echo "release-branch=${VERSION%.*}" >> "${GITHUB_OUTPUT}"
        echo "release-version=${VERSION}" >> "${GITHUB_OUTPUT}"
      env:
        VERSION: ${{ inputs.version }}
      shell: 'bash'

    - name: validate input (minor)
      if: ${{ inputs.type == 'minor' && ! endsWith(inputs.version, '0') }}
      run: echo '::error::version is not a minor one but a patch (only support for <major>.<minor>.0)' ; exit 1
      shell: 'bash'

    - name: validate input (patch)
      if: ${{ inputs.type == 'patch' && endsWith(inputs.version, '0') }}
      run: echo '::error::version is not a patch one but a minor (only support for <major>.<minor>.[1-9]+[0-9]*)' ; exit 1
      shell: 'bash'

    - uses: elastic/apm-pipeline-library/.github/actions/slack-message@current
      if: failure()
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}
        channel: "#apm-server-test-release"
        threadTimestamp: ${{ steps.slack-thread.outputs.threadTimestamp || '' }}
        message: ':fire: Something went wrong with the ${{ inputs.type }} release preparation. See <${{ env.JOB_URL }}|logs>'
      env:
        JOB_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
