---
description: Pipeline for ingesting APM trace events.
processors:
  - pipeline:
      name: observer_version
  - pipeline:
      name: observer_ids
  - pipeline:
      name: ecs_version
  - pipeline:
      name: user_agent
  - pipeline:
      name: process_ppid
  - pipeline:
      name: client_geoip
  - set:
      if: ctx.transaction?.type != null
      field: processor.event
      value: transaction
  - set:
      if: ctx.span?.type != null
      field: processor.event
      value: span
  - pipeline:
      name: event_duration
  # event.success_count logic
  - set:
      if: ctx.event?.outcome == 'success'
      field: event.success_count
      value: 1
      ignore_failure: true
  - set:
      if: ctx.event?.outcome == 'failure'
      field: event.success_count
      value: 0
      ignore_failure: true
  # end of event.success_count logic
  - script:
      lang: painless
      source: |
        def representative_count = ctx?.span?.representative_count != null ? ctx?.span?.representative_count : ctx?.transaction?.representative_count;
          
        if(representative_count == null) {
        return;
        }
        
        int doc_count = (int)representative_count;
        
        double decimal = representative_count - doc_count;
        
        if (decimal > Math.random()) {
        doc_count += 1;
        }
        
        ctx._doc_count = doc_count;
